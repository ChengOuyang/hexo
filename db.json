{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/nexT/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/nexT/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"4031a0c8a4ef710acc2176a4016467178b4fea4e","modified":1493350462000},{"_id":"themes/nexT/.DS_Store","hash":"7c758f128fde6f3785f4ba085f85f2ff5e646e50","modified":1493349135000},{"_id":"themes/nexT/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1493030204000},{"_id":"themes/nexT/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1493030204000},{"_id":"themes/nexT/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1493030204000},{"_id":"themes/nexT/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1493030204000},{"_id":"themes/nexT/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1493030204000},{"_id":"themes/nexT/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1493030204000},{"_id":"themes/nexT/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1493030204000},{"_id":"themes/nexT/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1493030204000},{"_id":"themes/nexT/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1493030204000},{"_id":"themes/nexT/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1493030204000},{"_id":"themes/nexT/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1493030204000},{"_id":"themes/nexT/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1493030204000},{"_id":"themes/nexT/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1493030204000},{"_id":"themes/nexT/_config.yml","hash":"0113f7373827dd6f06102da88af8915312dd7bd1","modified":1493030204000},{"_id":"themes/nexT/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1493030204000},{"_id":"themes/nexT/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1493030204000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1493347812000},{"_id":"source/_posts/Carthage-安装与使用.md","hash":"ae280a6cb3ac9e2369c706d00d46b31e8fd58b69","modified":1493353434000},{"_id":"source/_posts/Xcode-7-制作-framework.md","hash":"0cfc5985f046411f2304a744af96b36e0a71de2b","modified":1493350900000},{"_id":"source/_posts/CocoaPods-安装与使用.md","hash":"c8be5a17f82aeda705fc14b61022cef25872276c","modified":1493353447000},{"_id":"source/_posts/iOS 客户端与服务端做时间同步.md","hash":"83d8c5458ce582ff91a8f5f7bbe942366d3f2bf7","modified":1493349982000},{"_id":"source/_posts/iOS-国际化.md","hash":"94be8a68eb2b91a3bddb6361caca30a5196d418f","modified":1493353206000},{"_id":"source/_posts/使用-xcworkspace-管理-iOS-工程.md","hash":"8129617fdbd08c7f8626e1728fa2d836ccd7cdfb","modified":1493350740000},{"_id":"themes/nexT/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1493030204000},{"_id":"themes/nexT/.github/ISSUE_TEMPLATE.md","hash":"fdd63b77472612337309eb93ec415a059b90756b","modified":1493030204000},{"_id":"themes/nexT/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1493030204000},{"_id":"themes/nexT/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1493030204000},{"_id":"themes/nexT/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1493030204000},{"_id":"themes/nexT/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1493030204000},{"_id":"themes/nexT/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1493030204000},{"_id":"themes/nexT/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1493030204000},{"_id":"themes/nexT/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1493030204000},{"_id":"themes/nexT/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1493030204000},{"_id":"themes/nexT/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1493030204000},{"_id":"themes/nexT/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1493030204000},{"_id":"themes/nexT/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1493030204000},{"_id":"themes/nexT/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1493030204000},{"_id":"themes/nexT/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1493030204000},{"_id":"themes/nexT/layout/_layout.swig","hash":"9d1a23a6add6f3d0f88c2d17979956f14aaa37a4","modified":1493030204000},{"_id":"themes/nexT/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1493030204000},{"_id":"themes/nexT/layout/category.swig","hash":"fb55a48fe92621578ab2db0c983c609371b3ed0e","modified":1493030204000},{"_id":"themes/nexT/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1493030204000},{"_id":"themes/nexT/layout/page.swig","hash":"4ddaeedf1599d167c4ee166d391e616a7660a4ef","modified":1493030204000},{"_id":"themes/nexT/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1493030204000},{"_id":"themes/nexT/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1493030204000},{"_id":"themes/nexT/layout/tag.swig","hash":"52c506fa2b46a28ae2df10831c61c51a45b2f6c1","modified":1493030204000},{"_id":"themes/nexT/scripts/.DS_Store","hash":"dfb21c8c2e9f2dcaa7368c84f10ba6ed2b082d2a","modified":1493349141000},{"_id":"themes/nexT/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1493030204000},{"_id":"themes/nexT/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1493030204000},{"_id":"themes/nexT/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1493030204000},{"_id":"themes/nexT/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1493030204000},{"_id":"themes/nexT/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1493030204000},{"_id":"themes/nexT/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493030204000},{"_id":"themes/nexT/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1493030204000},{"_id":"themes/nexT/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1493030204000},{"_id":"themes/nexT/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1493030204000},{"_id":"themes/nexT/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1493030204000},{"_id":"themes/nexT/layout/_macro/post.swig","hash":"7b2683963693516b21095010911091414f112c03","modified":1493030204000},{"_id":"themes/nexT/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1493030204000},{"_id":"themes/nexT/layout/_macro/sidebar.swig","hash":"911b99ba0445b2c07373128d87a4ef2eb7de341a","modified":1493030204000},{"_id":"themes/nexT/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1493030204000},{"_id":"themes/nexT/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1493030204000},{"_id":"themes/nexT/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1493030204000},{"_id":"themes/nexT/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/comments.swig","hash":"1c7d3c975e499b9aa3119d6724b030b7b00fc87e","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/head.swig","hash":"d4a05c51aac02f1f6248baccf2ddb8ee12b9122f","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1493030204000},{"_id":"themes/nexT/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1493030204000},{"_id":"themes/nexT/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1493030204000},{"_id":"themes/nexT/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1493030204000},{"_id":"themes/nexT/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1493030204000},{"_id":"themes/nexT/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1493030204000},{"_id":"themes/nexT/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1493030204000},{"_id":"themes/nexT/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1493030204000},{"_id":"themes/nexT/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1493030204000},{"_id":"themes/nexT/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1493030204000},{"_id":"themes/nexT/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1493030204000},{"_id":"themes/nexT/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1493030204000},{"_id":"themes/nexT/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1493030204000},{"_id":"themes/nexT/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1493030204000},{"_id":"themes/nexT/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1493030204000},{"_id":"themes/nexT/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1493030204000},{"_id":"themes/nexT/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1493030204000},{"_id":"themes/nexT/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493030204000},{"_id":"themes/nexT/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493030204000},{"_id":"themes/nexT/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1493030204000},{"_id":"themes/nexT/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1493030204000},{"_id":"themes/nexT/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1493030204000},{"_id":"themes/nexT/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493030204000},{"_id":"themes/nexT/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493030204000},{"_id":"themes/nexT/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493030204000},{"_id":"themes/nexT/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493030204000},{"_id":"themes/nexT/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493030204000},{"_id":"themes/nexT/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493030204000},{"_id":"themes/nexT/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493030204000},{"_id":"themes/nexT/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1493030204000},{"_id":"themes/nexT/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/search/localsearch.swig","hash":"2d1075f4cabcb3956b7b84a8e210f5a66f0a5562","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1493030204000},{"_id":"themes/nexT/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/comments/livere.swig","hash":"1d0d01aaeb7bcde3671263d736718f8837c20182","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/search/localsearch.swig","hash":"b08082aa37bdd53ccf7bb217c0db6975224b471f","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1493030204000},{"_id":"themes/nexT/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1493030204000},{"_id":"themes/nexT/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1493030204000},{"_id":"themes/nexT/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1493030204000},{"_id":"themes/nexT/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1493030204000},{"_id":"themes/nexT/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1493030204000},{"_id":"themes/nexT/source/css/_variables/base.styl","hash":"d6a793bcada68d4b6c58392546bc48a482e4a7d3","modified":1493030204000},{"_id":"themes/nexT/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1493030204000},{"_id":"themes/nexT/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1493030204000},{"_id":"themes/nexT/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1493030204000},{"_id":"themes/nexT/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1493030204000},{"_id":"themes/nexT/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1493030204000},{"_id":"themes/nexT/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1493030204000},{"_id":"themes/nexT/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1493030204000},{"_id":"themes/nexT/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1493030204000},{"_id":"themes/nexT/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1493030204000},{"_id":"themes/nexT/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1493030204000},{"_id":"themes/nexT/source/js/src/utils.js","hash":"803f684fa7d0e729115a48851023a31f6fb6d0a7","modified":1493030204000},{"_id":"themes/nexT/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1493030204000},{"_id":"themes/nexT/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b614b73ba49ca9136fed7c387ee8df72fe65118f","modified":1493030204000},{"_id":"themes/nexT/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1493030204000},{"_id":"themes/nexT/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1493030204000},{"_id":"themes/nexT/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1493030204000},{"_id":"themes/nexT/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1493030204000},{"_id":"themes/nexT/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1493030204000},{"_id":"themes/nexT/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1493030204000},{"_id":"themes/nexT/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1493030204000},{"_id":"themes/nexT/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1493030204000},{"_id":"themes/nexT/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1493030204000},{"_id":"themes/nexT/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1493030204000},{"_id":"themes/nexT/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1493030204000},{"_id":"themes/nexT/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1493030204000},{"_id":"themes/nexT/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1493030204000},{"_id":"themes/nexT/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1493030204000},{"_id":"themes/nexT/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1493030204000},{"_id":"themes/nexT/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1493030204000},{"_id":"themes/nexT/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1493030204000},{"_id":"themes/nexT/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1493030204000},{"_id":"themes/nexT/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1493030204000},{"_id":"themes/nexT/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1493030204000},{"_id":"themes/nexT/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1493030204000},{"_id":"themes/nexT/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1493030204000},{"_id":"themes/nexT/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1493030204000},{"_id":"themes/nexT/source/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1493030204000},{"_id":"themes/nexT/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1493030204000},{"_id":"themes/nexT/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1493030204000},{"_id":"themes/nexT/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1493030204000},{"_id":"themes/nexT/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1493030204000},{"_id":"themes/nexT/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1493030204000},{"_id":"themes/nexT/source/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1493030204000},{"_id":"themes/nexT/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1493030204000},{"_id":"themes/nexT/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-meta.styl","hash":"c089419916988d0f51d89b225460fe11b631e0a3","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/post/post.styl","hash":"8c0276883398651336853d5ec0e9da267a00dd86","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1493030204000},{"_id":"themes/nexT/source/css/_common/components/third-party/third-party.styl","hash":"bb3be8374c31c372ed0995bd8030d2b920d581de","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1493030204000},{"_id":"themes/nexT/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1493030204000},{"_id":"themes/nexT/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1493030204000},{"_id":"themes/nexT/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1493030204000},{"_id":"themes/nexT/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1493030204000},{"_id":"themes/nexT/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1493030204000},{"_id":"themes/nexT/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1493030204000},{"_id":"themes/nexT/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1493030204000},{"_id":"themes/nexT/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1493030204000},{"_id":"themes/nexT/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1493030204000},{"_id":"public/archives/index.html","hash":"cac065144c3a9b72aa39ef9ac1e9720256d8179c","modified":1493353379278},{"_id":"public/archives/2017/index.html","hash":"d1d6b505a721642e578a0557cb8a7e90197d8f8c","modified":1493353379279},{"_id":"public/archives/2017/04/index.html","hash":"389faa2b73acc19fe108cd282382844bb402da10","modified":1493353379279},{"_id":"public/categories/编程/index.html","hash":"8989466c6e714588ee37bd665548668445208772","modified":1493353379279},{"_id":"public/tags/iOS/index.html","hash":"858aea5308b60c50880ab2616fe757aefb3801e0","modified":1493353379279},{"_id":"public/tags/Framework/index.html","hash":"964a57f4dd3ee487b22a070b4f83949e29c8711d","modified":1493353379279},{"_id":"public/tags/Xcode/index.html","hash":"1f1c8a45eafa57fc7de0b3bd904ac28a5035572b","modified":1493353379279},{"_id":"public/tags/服务端/index.html","hash":"6c274a50ac09640b4f7cdcc61715050148172867","modified":1493353379279},{"_id":"public/2017/04/28/iOS 客户端与服务端做时间同步/index.html","hash":"8f4ab600ddebe0bf6a614ed86ac4a417182abe4f","modified":1493353379279},{"_id":"public/2017/04/28/使用-xcworkspace-管理-iOS-工程/index.html","hash":"8c9197e5a22b7c871d3ea8a2258f82e8a8b87439","modified":1493353379279},{"_id":"public/2017/04/28/Xcode-7-制作-framework/index.html","hash":"4a20b42cb4dc9effd8428e7a7a3b1a0b06514209","modified":1493353379279},{"_id":"public/2017/04/28/iOS-国际化/index.html","hash":"f452c829b689a4aa60e234d744c84b4d67dbaec6","modified":1493353379279},{"_id":"public/index.html","hash":"d51224e1923d30555040e048760a8c1f2e26d248","modified":1493353454066},{"_id":"public/2017/04/28/Carthage-安装与使用/index.html","hash":"d141716ac50fca9182e6f3a195da5367636c3f10","modified":1493353454066},{"_id":"public/categories/工具/index.html","hash":"513bfddaeb7086b8206075022708cb878cf5c0f4","modified":1493353379285},{"_id":"public/tags/Carthage/index.html","hash":"f8da8de077e99bfb19d917acc899856b6c491459","modified":1493353379285},{"_id":"public/2017/04/28/CocoaPods-安装与使用/index.html","hash":"e31284c82dbdaad56a8b8943d96f54c6c62444b7","modified":1493353454066},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1493353379293},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1493353379293},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1493353379293},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1493353379293},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1493353379293},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1493353379293},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1493353379293},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1493353379293},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1493353379294},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493353379294},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493353379294},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1493353379294},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1493353379294},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1493353379294},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1493353379294},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1493353379294},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1493353379294},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1493353379294},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1493353379294},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1493353379294},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1493353379294},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1493353379294},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1493353379294},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1493353379294},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1493353379294},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1493353379294},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1493353379294},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1493353379294},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1493353379850},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1493353379860},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1493353379874},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1493353379874},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1493353379874},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1493353379874},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1493353379874},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1493353379874},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1493353379874},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1493353379874},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1493353379874},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1493353379874},{"_id":"public/js/src/utils.js","hash":"803f684fa7d0e729115a48851023a31f6fb6d0a7","modified":1493353379874},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1493353379874},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"b614b73ba49ca9136fed7c387ee8df72fe65118f","modified":1493353379874},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1493353379874},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1493353379874},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1493353379874},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1493353379874},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1493353379874},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1493353379875},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1493353379875},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1493353379875},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1493353379875},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1493353379875},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1493353379875},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1493353379875},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1493353379875},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1493353379875},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1493353379875},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1493353379875},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1493353379875},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1493353379875},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1493353379875},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1493353379875},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1493353379875},{"_id":"public/css/main.css","hash":"31328618591b313ae433ee2206bb143c93da58cf","modified":1493353379875},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1493353379875},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1493353379875},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1493353379875},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1493353379875},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1493353379875},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1493353379875},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1493353379875},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1493353379875},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1493353379875},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1493353379875},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1493353379875},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1493353379875},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1493353379876},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1493353379876},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1493353379876},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1493353379876},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1493353379876},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1493353379876},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1493353379876},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1493353379876},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1493353379877},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1493353379896}],"Category":[{"name":"工具","_id":"cj21c1la20002ca07hyt6breg"},{"name":"编程","_id":"cj21c1lac0007ca07u1m27yy9"}],"Data":[],"Page":[],"Post":[{"title":"Carthage 安装与使用","date":"2017-04-28T04:21:30.000Z","_content":"\n#### 安装\n\n在终端下运行：\n```\nbrew install carthage\n```\n\n#### 配置第三方类库\n\n1. 到目标工程目录下创建 *Carthage* 文件：\n![目标工程目录](http://upload-images.jianshu.io/upload_images/808722-c578f75eca8e50b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n2. 在终端上用vim写好要配置的库信息：\n```\nvim Cartfile\n```\n![Cartfile文件内容](http://upload-images.jianshu.io/upload_images/808722-2091cde8f817eb44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n3. 运行：\n```\ncarthage update --platform iOS    # 仅编译 iOS 平台\n```\n4. 如果目标工程是 *OS X* 应用， 在 *Xcode* 的目标应用程序 *target* 的 `General` 设置标签中的 `Embedded Binaries` 区域，将框架从 *Carthage.build* 文件夹拖拽进去。*OS X* 工程设置到此为止。\n5. 如果是目标工程是 *iOS* 应用，在 *Xcode* 的目标应用程序 *target* 的 `General` 设置标签中的 `Linked Frameworks and Libraries` 区域，将目标框架从 *Carthage/Build* 文件夹拖拽进去。继续接步骤6。\n![iOS](http://upload-images.jianshu.io/upload_images/808722-aacae0c89e898e5f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n6. 在 *Xcode* 的目标应用程序 *target* 的 `Build Phases` 添加新脚本 `New Run Script Phase`，输入内容：\n```\n/usr/local/bin/carthage copy-frameworks\n```\n![](http://upload-images.jianshu.io/upload_images/808722-fbbe373c506e4624.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\ninput Files处输入为：\n```\n$(SRCROOT)/Carthage/Build/iOS/ReactiveCocoa.framework\n```\n对应为原工程目录 `/ Carthage/Build/iOS/xxx.framework` 文件。\n \n7. `Carthage` 中指定编译源码版本，有三种方式：\n 1. `github \"Alamofire/Alamofire\" ~> 3.0`，表示使用版本3.0以上但是低于4.0的最新版本，如3.5, 3.9\n 2. `github \"Alamofire/Alamofire\" == 3.0`，表示使用3.0版本\n 3. `github \"Alamofire/Alamofire\" >= 3.0`，表示使用3.0或更高的版本\n 4. `github \"Alamofire/Alamofire\"`，没有指明版本号，则会自动使用最新的版本\n\nPS：在这个过程当中，*Carthage* 将创建一些 *build artifacts*，其中最重要的是 *Cartfile.lock* 文件，里面将列出每个框架的具体版本，确保你提交了这个文件到版本控制工具里面（如Git、SVN），因为每个用到项目的人都需要它来编译相同版本的框架。完成上面的步骤并提交你的修改，项目的其他用户就只需要获取该仓库并执行 `carthage bootstrap` 就能使用你所添加的框架。","source":"_posts/Carthage-安装与使用.md","raw":"---\ntitle: Carthage 安装与使用\ndate: 2017-04-28 12:21:30\ncategories: 工具\ntags: [iOS, Carthage]\n---\n\n#### 安装\n\n在终端下运行：\n```\nbrew install carthage\n```\n\n#### 配置第三方类库\n\n1. 到目标工程目录下创建 *Carthage* 文件：\n![目标工程目录](http://upload-images.jianshu.io/upload_images/808722-c578f75eca8e50b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n2. 在终端上用vim写好要配置的库信息：\n```\nvim Cartfile\n```\n![Cartfile文件内容](http://upload-images.jianshu.io/upload_images/808722-2091cde8f817eb44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n3. 运行：\n```\ncarthage update --platform iOS    # 仅编译 iOS 平台\n```\n4. 如果目标工程是 *OS X* 应用， 在 *Xcode* 的目标应用程序 *target* 的 `General` 设置标签中的 `Embedded Binaries` 区域，将框架从 *Carthage.build* 文件夹拖拽进去。*OS X* 工程设置到此为止。\n5. 如果是目标工程是 *iOS* 应用，在 *Xcode* 的目标应用程序 *target* 的 `General` 设置标签中的 `Linked Frameworks and Libraries` 区域，将目标框架从 *Carthage/Build* 文件夹拖拽进去。继续接步骤6。\n![iOS](http://upload-images.jianshu.io/upload_images/808722-aacae0c89e898e5f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n6. 在 *Xcode* 的目标应用程序 *target* 的 `Build Phases` 添加新脚本 `New Run Script Phase`，输入内容：\n```\n/usr/local/bin/carthage copy-frameworks\n```\n![](http://upload-images.jianshu.io/upload_images/808722-fbbe373c506e4624.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\ninput Files处输入为：\n```\n$(SRCROOT)/Carthage/Build/iOS/ReactiveCocoa.framework\n```\n对应为原工程目录 `/ Carthage/Build/iOS/xxx.framework` 文件。\n \n7. `Carthage` 中指定编译源码版本，有三种方式：\n 1. `github \"Alamofire/Alamofire\" ~> 3.0`，表示使用版本3.0以上但是低于4.0的最新版本，如3.5, 3.9\n 2. `github \"Alamofire/Alamofire\" == 3.0`，表示使用3.0版本\n 3. `github \"Alamofire/Alamofire\" >= 3.0`，表示使用3.0或更高的版本\n 4. `github \"Alamofire/Alamofire\"`，没有指明版本号，则会自动使用最新的版本\n\nPS：在这个过程当中，*Carthage* 将创建一些 *build artifacts*，其中最重要的是 *Cartfile.lock* 文件，里面将列出每个框架的具体版本，确保你提交了这个文件到版本控制工具里面（如Git、SVN），因为每个用到项目的人都需要它来编译相同版本的框架。完成上面的步骤并提交你的修改，项目的其他用户就只需要获取该仓库并执行 `carthage bootstrap` 就能使用你所添加的框架。","slug":"Carthage-安装与使用","published":1,"updated":"2017-04-28T04:23:54.000Z","_id":"cj21c1l9m0000ca072j546top","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>在终端下运行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install carthage</div></pre></td></tr></table></figure></p>\n<h4 id=\"配置第三方类库\"><a href=\"#配置第三方类库\" class=\"headerlink\" title=\"配置第三方类库\"></a>配置第三方类库</h4><ol>\n<li>到目标工程目录下创建 <em>Carthage</em> 文件：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c578f75eca8e50b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"目标工程目录\"></li>\n<li>在终端上用vim写好要配置的库信息：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim Cartfile</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-2091cde8f817eb44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Cartfile文件内容\"></p>\n<ol>\n<li><p>运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">carthage update --platform iOS    # 仅编译 iOS 平台</div></pre></td></tr></table></figure>\n</li>\n<li><p>如果目标工程是 <em>OS X</em> 应用， 在 <em>Xcode</em> 的目标应用程序 <em>target</em> 的 <code>General</code> 设置标签中的 <code>Embedded Binaries</code> 区域，将框架从 <em>Carthage.build</em> 文件夹拖拽进去。<em>OS X</em> 工程设置到此为止。</p>\n</li>\n<li>如果是目标工程是 <em>iOS</em> 应用，在 <em>Xcode</em> 的目标应用程序 <em>target</em> 的 <code>General</code> 设置标签中的 <code>Linked Frameworks and Libraries</code> 区域，将目标框架从 <em>Carthage/Build</em> 文件夹拖拽进去。继续接步骤6。<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-aacae0c89e898e5f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"iOS\"></li>\n<li>在 <em>Xcode</em> 的目标应用程序 <em>target</em> 的 <code>Build Phases</code> 添加新脚本 <code>New Run Script Phase</code>，输入内容：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/bin/carthage copy-frameworks</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-fbbe373c506e4624.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>input Files处输入为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(SRCROOT)/Carthage/Build/iOS/ReactiveCocoa.framework</div></pre></td></tr></table></figure></p>\n<p>对应为原工程目录 <code>/ Carthage/Build/iOS/xxx.framework</code> 文件。</p>\n<ol>\n<li><code>Carthage</code> 中指定编译源码版本，有三种方式：<ol>\n<li><code>github &quot;Alamofire/Alamofire&quot; ~&gt; 3.0</code>，表示使用版本3.0以上但是低于4.0的最新版本，如3.5, 3.9</li>\n<li><code>github &quot;Alamofire/Alamofire&quot; == 3.0</code>，表示使用3.0版本</li>\n<li><code>github &quot;Alamofire/Alamofire&quot; &gt;= 3.0</code>，表示使用3.0或更高的版本</li>\n<li><code>github &quot;Alamofire/Alamofire&quot;</code>，没有指明版本号，则会自动使用最新的版本</li>\n</ol>\n</li>\n</ol>\n<p>PS：在这个过程当中，<em>Carthage</em> 将创建一些 <em>build artifacts</em>，其中最重要的是 <em>Cartfile.lock</em> 文件，里面将列出每个框架的具体版本，确保你提交了这个文件到版本控制工具里面（如Git、SVN），因为每个用到项目的人都需要它来编译相同版本的框架。完成上面的步骤并提交你的修改，项目的其他用户就只需要获取该仓库并执行 <code>carthage bootstrap</code> 就能使用你所添加的框架。</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>在终端下运行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install carthage</div></pre></td></tr></table></figure></p>\n<h4 id=\"配置第三方类库\"><a href=\"#配置第三方类库\" class=\"headerlink\" title=\"配置第三方类库\"></a>配置第三方类库</h4><ol>\n<li>到目标工程目录下创建 <em>Carthage</em> 文件：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c578f75eca8e50b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"目标工程目录\"></li>\n<li>在终端上用vim写好要配置的库信息：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim Cartfile</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-2091cde8f817eb44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Cartfile文件内容\"></p>\n<ol>\n<li><p>运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">carthage update --platform iOS    # 仅编译 iOS 平台</div></pre></td></tr></table></figure>\n</li>\n<li><p>如果目标工程是 <em>OS X</em> 应用， 在 <em>Xcode</em> 的目标应用程序 <em>target</em> 的 <code>General</code> 设置标签中的 <code>Embedded Binaries</code> 区域，将框架从 <em>Carthage.build</em> 文件夹拖拽进去。<em>OS X</em> 工程设置到此为止。</p>\n</li>\n<li>如果是目标工程是 <em>iOS</em> 应用，在 <em>Xcode</em> 的目标应用程序 <em>target</em> 的 <code>General</code> 设置标签中的 <code>Linked Frameworks and Libraries</code> 区域，将目标框架从 <em>Carthage/Build</em> 文件夹拖拽进去。继续接步骤6。<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-aacae0c89e898e5f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"iOS\"></li>\n<li>在 <em>Xcode</em> 的目标应用程序 <em>target</em> 的 <code>Build Phases</code> 添加新脚本 <code>New Run Script Phase</code>，输入内容：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/bin/carthage copy-frameworks</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-fbbe373c506e4624.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>input Files处输入为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(SRCROOT)/Carthage/Build/iOS/ReactiveCocoa.framework</div></pre></td></tr></table></figure></p>\n<p>对应为原工程目录 <code>/ Carthage/Build/iOS/xxx.framework</code> 文件。</p>\n<ol>\n<li><code>Carthage</code> 中指定编译源码版本，有三种方式：<ol>\n<li><code>github &quot;Alamofire/Alamofire&quot; ~&gt; 3.0</code>，表示使用版本3.0以上但是低于4.0的最新版本，如3.5, 3.9</li>\n<li><code>github &quot;Alamofire/Alamofire&quot; == 3.0</code>，表示使用3.0版本</li>\n<li><code>github &quot;Alamofire/Alamofire&quot; &gt;= 3.0</code>，表示使用3.0或更高的版本</li>\n<li><code>github &quot;Alamofire/Alamofire&quot;</code>，没有指明版本号，则会自动使用最新的版本</li>\n</ol>\n</li>\n</ol>\n<p>PS：在这个过程当中，<em>Carthage</em> 将创建一些 <em>build artifacts</em>，其中最重要的是 <em>Cartfile.lock</em> 文件，里面将列出每个框架的具体版本，确保你提交了这个文件到版本控制工具里面（如Git、SVN），因为每个用到项目的人都需要它来编译相同版本的框架。完成上面的步骤并提交你的修改，项目的其他用户就只需要获取该仓库并执行 <code>carthage bootstrap</code> 就能使用你所添加的框架。</p>\n"},{"title":"Xcode 7 制作 framework","date":"2017-04-28T03:36:17.000Z","_content":"\n#### 创建工程\n![创建工程](http://image.xiaomantou.net/Fir9ENe0SJLgJiIKksvnc_M7iGj2 \"创建工程\")\n\n#### 添加源代码\n\n1. 添加OC源文件\n在 swift 制作 framework 添加 OC文件时，不能设置桥接文件，而是将 OC头文件放到框架的头文件中，如下图：\n![](http://upload-images.jianshu.io/upload_images/808722-6fa61b4db117f9ae?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n同时将该OC头文件设置为 public（默认添加到Private，可拖动到Public）：\n![](http://upload-images.jianshu.io/upload_images/808722-c8bf1ea9c2734d58?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 添加框架源代码\n![](http://upload-images.jianshu.io/upload_images/808722-2cc2ef95703636a5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 添加脚本\n\n添加生成模拟器与真机都可使用的 framework 的运行脚本。\n\n1. 给框架工程添加Target：File/New/Target\n![](http://upload-images.jianshu.io/upload_images/808722-d0af6b40098c0172?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![脚本内容](http://image.xiaomantou.net/FmotWoB3NZkGWER0du76zdbav66t \"脚本内容\")\n脚本内容如下（脚本内容是从网上搜索到的，但在工程中一直出现问题，无法用于模拟器，后来发现是缺少了`cp -R \"${SIMULATOR_DIR}/\" \"${INSTALL_DIR}/\"`）：\n```\n# Sets the target folders and the final framework product.\n# 如果工程名称和Framework的Target名称不一样的话，要自定义FMKNAME\n# 例如: FMK_NAME = \"MyFramework\"\nFMK_NAME=${PROJECT_NAME}\n# Install dir will be the final output to the framework.\n# The following line create it in the root folder of the current project.\nINSTALL_DIR=${SRCROOT}/Products/${FMK_NAME}.framework\n# Working dir will be deleted after the framework creation.\nWRK_DIR=build\nDEVICE_DIR=${WRK_DIR}/Release-iphoneos/${FMK_NAME}.framework\nSIMULATOR_DIR=${WRK_DIR}/Release-iphonesimulator/${FMK_NAME}.framework\n# -configuration ${CONFIGURATION}\n# Clean and Building both architectures.\nxcodebuild -configuration \"Release\" -target \"${FMK_NAME}\" -sdk iphoneos clean build\nxcodebuild -configuration \"Release\" -target \"${FMK_NAME}\" -sdk iphonesimulator clean build\n# Cleaning the oldest.\nif [ -d \"${INSTALL_DIR}\" ]\nthen\nrm -rf \"${INSTALL_DIR}\"\nfi\nmkdir -p \"${INSTALL_DIR}\"\ncp -R \"${DEVICE_DIR}/\" \"${INSTALL_DIR}/\"\ncp -R \"${SIMULATOR_DIR}/\" \"${INSTALL_DIR}/\"\n# Uses the Lipo Tool to merge both binary files (i386 + armv6/armv7) into one Universal final product.\nlipo -create \"${DEVICE_DIR}/${FMK_NAME}\" \"${SIMULATOR_DIR}/${FMK_NAME}\" -output \"${INSTALL_DIR}/${FMK_NAME}\"\nrm -r \"${WRK_DIR}\"\nopen \"${INSTALL_DIR}\"\n```\n\n2. 编译脚本：Product/Build For/Profiling\n![](http://upload-images.jianshu.io/upload_images/808722-c0e81f46ae34d67e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n编译完脚本会自动弹出生成的framework的文件夹。\n\n#### 添加framework到工程\n\n1. 将目标 framework 和其所用到的资源文件拖到目标工程中\n![](http://upload-images.jianshu.io/upload_images/808722-5201d15c8f62bcc6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 添加目标框架到复制文件中去\n![](http://upload-images.jianshu.io/upload_images/808722-136adf812bf55784?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### \b打包提交到 App Store\n\n在使用自制的 *Framework* 的应用程序打包提交到 *App Store* 的时候，可能会遇到以下问题`“Unsupported architectures. Your executable contains unsupported architectures '[x86_64, i386]'”`，此时在你**要打包提交的目标程序**的`Build Phases`下添加`Run Script`，并将以下内容复制进去：\n```\nAPP_PATH=\"${TARGET_BUILD_DIR}/${WRAPPER_NAME}\"\n# This script loops through the frameworks embedded in the application and\n# removes unused architectures.\nfind \"$APP_PATH\" -name '*.framework' -type d | while read -r FRAMEWORK\ndo\nFRAMEWORK_EXECUTABLE_NAME=$(defaults read \"$FRAMEWORK/Info.plist\" CFBundleExecutable)\nFRAMEWORK_EXECUTABLE_PATH=\"$FRAMEWORK/$FRAMEWORK_EXECUTABLE_NAME\"\necho \"Executable is $FRAMEWORK_EXECUTABLE_PATH\"\nEXTRACTED_ARCHS=()\nfor ARCH in $ARCHS\ndo\necho \"Extracting $ARCH from $FRAMEWORK_EXECUTABLE_NAME\"\nlipo -extract \"$ARCH\" \"$FRAMEWORK_EXECUTABLE_PATH\" -o \"$FRAMEWORK_EXECUTABLE_PATH-$ARCH\"\nEXTRACTED_ARCHS+=(\"$FRAMEWORK_EXECUTABLE_PATH-$ARCH\")\ndone\necho \"Merging extracted architectures: ${ARCHS}\"\nlipo -o \"$FRAMEWORK_EXECUTABLE_PATH-merged\" -create \"${EXTRACTED_ARCHS[@]}\"\nrm \"${EXTRACTED_ARCHS[@]}\"\necho \"Replacing original executable with thinned version\"\nrm \"$FRAMEWORK_EXECUTABLE_PATH\"\nmv \"$FRAMEWORK_EXECUTABLE_PATH-merged\" \"$FRAMEWORK_EXECUTABLE_PATH\"\ndone\n```\n![](http://upload-images.jianshu.io/upload_images/808722-66eccd423305ba62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n*到此就结束了*\n\n\n#### 参考\n1. [Creating your first iOS Framework](https://robots.thoughtbot.com/creating-your-first-ios-framework)","source":"_posts/Xcode-7-制作-framework.md","raw":"---\ntitle: Xcode 7 制作 framework\ndate: 2017-04-28 11:36:17\ncategories: 编程\ntags: [iOS, Framework, Xcode]\n---\n\n#### 创建工程\n![创建工程](http://image.xiaomantou.net/Fir9ENe0SJLgJiIKksvnc_M7iGj2 \"创建工程\")\n\n#### 添加源代码\n\n1. 添加OC源文件\n在 swift 制作 framework 添加 OC文件时，不能设置桥接文件，而是将 OC头文件放到框架的头文件中，如下图：\n![](http://upload-images.jianshu.io/upload_images/808722-6fa61b4db117f9ae?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n同时将该OC头文件设置为 public（默认添加到Private，可拖动到Public）：\n![](http://upload-images.jianshu.io/upload_images/808722-c8bf1ea9c2734d58?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 添加框架源代码\n![](http://upload-images.jianshu.io/upload_images/808722-2cc2ef95703636a5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 添加脚本\n\n添加生成模拟器与真机都可使用的 framework 的运行脚本。\n\n1. 给框架工程添加Target：File/New/Target\n![](http://upload-images.jianshu.io/upload_images/808722-d0af6b40098c0172?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![脚本内容](http://image.xiaomantou.net/FmotWoB3NZkGWER0du76zdbav66t \"脚本内容\")\n脚本内容如下（脚本内容是从网上搜索到的，但在工程中一直出现问题，无法用于模拟器，后来发现是缺少了`cp -R \"${SIMULATOR_DIR}/\" \"${INSTALL_DIR}/\"`）：\n```\n# Sets the target folders and the final framework product.\n# 如果工程名称和Framework的Target名称不一样的话，要自定义FMKNAME\n# 例如: FMK_NAME = \"MyFramework\"\nFMK_NAME=${PROJECT_NAME}\n# Install dir will be the final output to the framework.\n# The following line create it in the root folder of the current project.\nINSTALL_DIR=${SRCROOT}/Products/${FMK_NAME}.framework\n# Working dir will be deleted after the framework creation.\nWRK_DIR=build\nDEVICE_DIR=${WRK_DIR}/Release-iphoneos/${FMK_NAME}.framework\nSIMULATOR_DIR=${WRK_DIR}/Release-iphonesimulator/${FMK_NAME}.framework\n# -configuration ${CONFIGURATION}\n# Clean and Building both architectures.\nxcodebuild -configuration \"Release\" -target \"${FMK_NAME}\" -sdk iphoneos clean build\nxcodebuild -configuration \"Release\" -target \"${FMK_NAME}\" -sdk iphonesimulator clean build\n# Cleaning the oldest.\nif [ -d \"${INSTALL_DIR}\" ]\nthen\nrm -rf \"${INSTALL_DIR}\"\nfi\nmkdir -p \"${INSTALL_DIR}\"\ncp -R \"${DEVICE_DIR}/\" \"${INSTALL_DIR}/\"\ncp -R \"${SIMULATOR_DIR}/\" \"${INSTALL_DIR}/\"\n# Uses the Lipo Tool to merge both binary files (i386 + armv6/armv7) into one Universal final product.\nlipo -create \"${DEVICE_DIR}/${FMK_NAME}\" \"${SIMULATOR_DIR}/${FMK_NAME}\" -output \"${INSTALL_DIR}/${FMK_NAME}\"\nrm -r \"${WRK_DIR}\"\nopen \"${INSTALL_DIR}\"\n```\n\n2. 编译脚本：Product/Build For/Profiling\n![](http://upload-images.jianshu.io/upload_images/808722-c0e81f46ae34d67e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n编译完脚本会自动弹出生成的framework的文件夹。\n\n#### 添加framework到工程\n\n1. 将目标 framework 和其所用到的资源文件拖到目标工程中\n![](http://upload-images.jianshu.io/upload_images/808722-5201d15c8f62bcc6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 添加目标框架到复制文件中去\n![](http://upload-images.jianshu.io/upload_images/808722-136adf812bf55784?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### \b打包提交到 App Store\n\n在使用自制的 *Framework* 的应用程序打包提交到 *App Store* 的时候，可能会遇到以下问题`“Unsupported architectures. Your executable contains unsupported architectures '[x86_64, i386]'”`，此时在你**要打包提交的目标程序**的`Build Phases`下添加`Run Script`，并将以下内容复制进去：\n```\nAPP_PATH=\"${TARGET_BUILD_DIR}/${WRAPPER_NAME}\"\n# This script loops through the frameworks embedded in the application and\n# removes unused architectures.\nfind \"$APP_PATH\" -name '*.framework' -type d | while read -r FRAMEWORK\ndo\nFRAMEWORK_EXECUTABLE_NAME=$(defaults read \"$FRAMEWORK/Info.plist\" CFBundleExecutable)\nFRAMEWORK_EXECUTABLE_PATH=\"$FRAMEWORK/$FRAMEWORK_EXECUTABLE_NAME\"\necho \"Executable is $FRAMEWORK_EXECUTABLE_PATH\"\nEXTRACTED_ARCHS=()\nfor ARCH in $ARCHS\ndo\necho \"Extracting $ARCH from $FRAMEWORK_EXECUTABLE_NAME\"\nlipo -extract \"$ARCH\" \"$FRAMEWORK_EXECUTABLE_PATH\" -o \"$FRAMEWORK_EXECUTABLE_PATH-$ARCH\"\nEXTRACTED_ARCHS+=(\"$FRAMEWORK_EXECUTABLE_PATH-$ARCH\")\ndone\necho \"Merging extracted architectures: ${ARCHS}\"\nlipo -o \"$FRAMEWORK_EXECUTABLE_PATH-merged\" -create \"${EXTRACTED_ARCHS[@]}\"\nrm \"${EXTRACTED_ARCHS[@]}\"\necho \"Replacing original executable with thinned version\"\nrm \"$FRAMEWORK_EXECUTABLE_PATH\"\nmv \"$FRAMEWORK_EXECUTABLE_PATH-merged\" \"$FRAMEWORK_EXECUTABLE_PATH\"\ndone\n```\n![](http://upload-images.jianshu.io/upload_images/808722-66eccd423305ba62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n*到此就结束了*\n\n\n#### 参考\n1. [Creating your first iOS Framework](https://robots.thoughtbot.com/creating-your-first-ios-framework)","slug":"Xcode-7-制作-framework","published":1,"updated":"2017-04-28T03:41:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21c1l9u0001ca07pi2c7wyv","content":"<h4 id=\"创建工程\"><a href=\"#创建工程\" class=\"headerlink\" title=\"创建工程\"></a>创建工程</h4><p><img src=\"http://image.xiaomantou.net/Fir9ENe0SJLgJiIKksvnc_M7iGj2\" alt=\"创建工程\" title=\"创建工程\"></p>\n<h4 id=\"添加源代码\"><a href=\"#添加源代码\" class=\"headerlink\" title=\"添加源代码\"></a>添加源代码</h4><ol>\n<li><p>添加OC源文件<br>在 swift 制作 framework 添加 OC文件时，不能设置桥接文件，而是将 OC头文件放到框架的头文件中，如下图：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-6fa61b4db117f9ae?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>同时将该OC头文件设置为 public（默认添加到Private，可拖动到Public）：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c8bf1ea9c2734d58?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>添加框架源代码<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-2cc2ef95703636a5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n</ol>\n<h4 id=\"添加脚本\"><a href=\"#添加脚本\" class=\"headerlink\" title=\"添加脚本\"></a>添加脚本</h4><p>添加生成模拟器与真机都可使用的 framework 的运行脚本。</p>\n<ol>\n<li><p>给框架工程添加Target：File/New/Target<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-d0af6b40098c0172?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://image.xiaomantou.net/FmotWoB3NZkGWER0du76zdbav66t\" alt=\"脚本内容\" title=\"脚本内容\"><br>脚本内容如下（脚本内容是从网上搜索到的，但在工程中一直出现问题，无法用于模拟器，后来发现是缺少了<code>cp -R &quot;${SIMULATOR_DIR}/&quot; &quot;${INSTALL_DIR}/&quot;</code>）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Sets the target folders and the final framework product.</div><div class=\"line\"># 如果工程名称和Framework的Target名称不一样的话，要自定义FMKNAME</div><div class=\"line\"># 例如: FMK_NAME = &quot;MyFramework&quot;</div><div class=\"line\">FMK_NAME=$&#123;PROJECT_NAME&#125;</div><div class=\"line\"># Install dir will be the final output to the framework.</div><div class=\"line\"># The following line create it in the root folder of the current project.</div><div class=\"line\">INSTALL_DIR=$&#123;SRCROOT&#125;/Products/$&#123;FMK_NAME&#125;.framework</div><div class=\"line\"># Working dir will be deleted after the framework creation.</div><div class=\"line\">WRK_DIR=build</div><div class=\"line\">DEVICE_DIR=$&#123;WRK_DIR&#125;/Release-iphoneos/$&#123;FMK_NAME&#125;.framework</div><div class=\"line\">SIMULATOR_DIR=$&#123;WRK_DIR&#125;/Release-iphonesimulator/$&#123;FMK_NAME&#125;.framework</div><div class=\"line\"># -configuration $&#123;CONFIGURATION&#125;</div><div class=\"line\"># Clean and Building both architectures.</div><div class=\"line\">xcodebuild -configuration &quot;Release&quot; -target &quot;$&#123;FMK_NAME&#125;&quot; -sdk iphoneos clean build</div><div class=\"line\">xcodebuild -configuration &quot;Release&quot; -target &quot;$&#123;FMK_NAME&#125;&quot; -sdk iphonesimulator clean build</div><div class=\"line\"># Cleaning the oldest.</div><div class=\"line\">if [ -d &quot;$&#123;INSTALL_DIR&#125;&quot; ]</div><div class=\"line\">then</div><div class=\"line\">rm -rf &quot;$&#123;INSTALL_DIR&#125;&quot;</div><div class=\"line\">fi</div><div class=\"line\">mkdir -p &quot;$&#123;INSTALL_DIR&#125;&quot;</div><div class=\"line\">cp -R &quot;$&#123;DEVICE_DIR&#125;/&quot; &quot;$&#123;INSTALL_DIR&#125;/&quot;</div><div class=\"line\">cp -R &quot;$&#123;SIMULATOR_DIR&#125;/&quot; &quot;$&#123;INSTALL_DIR&#125;/&quot;</div><div class=\"line\"># Uses the Lipo Tool to merge both binary files (i386 + armv6/armv7) into one Universal final product.</div><div class=\"line\">lipo -create &quot;$&#123;DEVICE_DIR&#125;/$&#123;FMK_NAME&#125;&quot; &quot;$&#123;SIMULATOR_DIR&#125;/$&#123;FMK_NAME&#125;&quot; -output &quot;$&#123;INSTALL_DIR&#125;/$&#123;FMK_NAME&#125;&quot;</div><div class=\"line\">rm -r &quot;$&#123;WRK_DIR&#125;&quot;</div><div class=\"line\">open &quot;$&#123;INSTALL_DIR&#125;&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>编译脚本：Product/Build For/Profiling<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c0e81f46ae34d67e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>编译完脚本会自动弹出生成的framework的文件夹。</p>\n</li>\n</ol>\n<h4 id=\"添加framework到工程\"><a href=\"#添加framework到工程\" class=\"headerlink\" title=\"添加framework到工程\"></a>添加framework到工程</h4><ol>\n<li><p>将目标 framework 和其所用到的资源文件拖到目标工程中<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-5201d15c8f62bcc6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>添加目标框架到复制文件中去<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-136adf812bf55784?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n</ol>\n<h4 id=\"打包提交到-App-Store\"><a href=\"#打包提交到-App-Store\" class=\"headerlink\" title=\"\b打包提交到 App Store\"></a>\b打包提交到 App Store</h4><p>在使用自制的 <em>Framework</em> 的应用程序打包提交到 <em>App Store</em> 的时候，可能会遇到以下问题<code>“Unsupported architectures. Your executable contains unsupported architectures &#39;[x86_64, i386]&#39;”</code>，此时在你<strong>要打包提交的目标程序</strong>的<code>Build Phases</code>下添加<code>Run Script</code>，并将以下内容复制进去：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">APP_PATH=&quot;$&#123;TARGET_BUILD_DIR&#125;/$&#123;WRAPPER_NAME&#125;&quot;</div><div class=\"line\"># This script loops through the frameworks embedded in the application and</div><div class=\"line\"># removes unused architectures.</div><div class=\"line\">find &quot;$APP_PATH&quot; -name &apos;*.framework&apos; -type d | while read -r FRAMEWORK</div><div class=\"line\">do</div><div class=\"line\">FRAMEWORK_EXECUTABLE_NAME=$(defaults read &quot;$FRAMEWORK/Info.plist&quot; CFBundleExecutable)</div><div class=\"line\">FRAMEWORK_EXECUTABLE_PATH=&quot;$FRAMEWORK/$FRAMEWORK_EXECUTABLE_NAME&quot;</div><div class=\"line\">echo &quot;Executable is $FRAMEWORK_EXECUTABLE_PATH&quot;</div><div class=\"line\">EXTRACTED_ARCHS=()</div><div class=\"line\">for ARCH in $ARCHS</div><div class=\"line\">do</div><div class=\"line\">echo &quot;Extracting $ARCH from $FRAMEWORK_EXECUTABLE_NAME&quot;</div><div class=\"line\">lipo -extract &quot;$ARCH&quot; &quot;$FRAMEWORK_EXECUTABLE_PATH&quot; -o &quot;$FRAMEWORK_EXECUTABLE_PATH-$ARCH&quot;</div><div class=\"line\">EXTRACTED_ARCHS+=(&quot;$FRAMEWORK_EXECUTABLE_PATH-$ARCH&quot;)</div><div class=\"line\">done</div><div class=\"line\">echo &quot;Merging extracted architectures: $&#123;ARCHS&#125;&quot;</div><div class=\"line\">lipo -o &quot;$FRAMEWORK_EXECUTABLE_PATH-merged&quot; -create &quot;$&#123;EXTRACTED_ARCHS[@]&#125;&quot;</div><div class=\"line\">rm &quot;$&#123;EXTRACTED_ARCHS[@]&#125;&quot;</div><div class=\"line\">echo &quot;Replacing original executable with thinned version&quot;</div><div class=\"line\">rm &quot;$FRAMEWORK_EXECUTABLE_PATH&quot;</div><div class=\"line\">mv &quot;$FRAMEWORK_EXECUTABLE_PATH-merged&quot; &quot;$FRAMEWORK_EXECUTABLE_PATH&quot;</div><div class=\"line\">done</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-66eccd423305ba62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p><em>到此就结束了</em></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ol>\n<li><a href=\"https://robots.thoughtbot.com/creating-your-first-ios-framework\" target=\"_blank\" rel=\"external\">Creating your first iOS Framework</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"创建工程\"><a href=\"#创建工程\" class=\"headerlink\" title=\"创建工程\"></a>创建工程</h4><p><img src=\"http://image.xiaomantou.net/Fir9ENe0SJLgJiIKksvnc_M7iGj2\" alt=\"创建工程\" title=\"创建工程\"></p>\n<h4 id=\"添加源代码\"><a href=\"#添加源代码\" class=\"headerlink\" title=\"添加源代码\"></a>添加源代码</h4><ol>\n<li><p>添加OC源文件<br>在 swift 制作 framework 添加 OC文件时，不能设置桥接文件，而是将 OC头文件放到框架的头文件中，如下图：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-6fa61b4db117f9ae?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>同时将该OC头文件设置为 public（默认添加到Private，可拖动到Public）：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c8bf1ea9c2734d58?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>添加框架源代码<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-2cc2ef95703636a5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n</ol>\n<h4 id=\"添加脚本\"><a href=\"#添加脚本\" class=\"headerlink\" title=\"添加脚本\"></a>添加脚本</h4><p>添加生成模拟器与真机都可使用的 framework 的运行脚本。</p>\n<ol>\n<li><p>给框架工程添加Target：File/New/Target<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-d0af6b40098c0172?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://image.xiaomantou.net/FmotWoB3NZkGWER0du76zdbav66t\" alt=\"脚本内容\" title=\"脚本内容\"><br>脚本内容如下（脚本内容是从网上搜索到的，但在工程中一直出现问题，无法用于模拟器，后来发现是缺少了<code>cp -R &quot;${SIMULATOR_DIR}/&quot; &quot;${INSTALL_DIR}/&quot;</code>）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Sets the target folders and the final framework product.</div><div class=\"line\"># 如果工程名称和Framework的Target名称不一样的话，要自定义FMKNAME</div><div class=\"line\"># 例如: FMK_NAME = &quot;MyFramework&quot;</div><div class=\"line\">FMK_NAME=$&#123;PROJECT_NAME&#125;</div><div class=\"line\"># Install dir will be the final output to the framework.</div><div class=\"line\"># The following line create it in the root folder of the current project.</div><div class=\"line\">INSTALL_DIR=$&#123;SRCROOT&#125;/Products/$&#123;FMK_NAME&#125;.framework</div><div class=\"line\"># Working dir will be deleted after the framework creation.</div><div class=\"line\">WRK_DIR=build</div><div class=\"line\">DEVICE_DIR=$&#123;WRK_DIR&#125;/Release-iphoneos/$&#123;FMK_NAME&#125;.framework</div><div class=\"line\">SIMULATOR_DIR=$&#123;WRK_DIR&#125;/Release-iphonesimulator/$&#123;FMK_NAME&#125;.framework</div><div class=\"line\"># -configuration $&#123;CONFIGURATION&#125;</div><div class=\"line\"># Clean and Building both architectures.</div><div class=\"line\">xcodebuild -configuration &quot;Release&quot; -target &quot;$&#123;FMK_NAME&#125;&quot; -sdk iphoneos clean build</div><div class=\"line\">xcodebuild -configuration &quot;Release&quot; -target &quot;$&#123;FMK_NAME&#125;&quot; -sdk iphonesimulator clean build</div><div class=\"line\"># Cleaning the oldest.</div><div class=\"line\">if [ -d &quot;$&#123;INSTALL_DIR&#125;&quot; ]</div><div class=\"line\">then</div><div class=\"line\">rm -rf &quot;$&#123;INSTALL_DIR&#125;&quot;</div><div class=\"line\">fi</div><div class=\"line\">mkdir -p &quot;$&#123;INSTALL_DIR&#125;&quot;</div><div class=\"line\">cp -R &quot;$&#123;DEVICE_DIR&#125;/&quot; &quot;$&#123;INSTALL_DIR&#125;/&quot;</div><div class=\"line\">cp -R &quot;$&#123;SIMULATOR_DIR&#125;/&quot; &quot;$&#123;INSTALL_DIR&#125;/&quot;</div><div class=\"line\"># Uses the Lipo Tool to merge both binary files (i386 + armv6/armv7) into one Universal final product.</div><div class=\"line\">lipo -create &quot;$&#123;DEVICE_DIR&#125;/$&#123;FMK_NAME&#125;&quot; &quot;$&#123;SIMULATOR_DIR&#125;/$&#123;FMK_NAME&#125;&quot; -output &quot;$&#123;INSTALL_DIR&#125;/$&#123;FMK_NAME&#125;&quot;</div><div class=\"line\">rm -r &quot;$&#123;WRK_DIR&#125;&quot;</div><div class=\"line\">open &quot;$&#123;INSTALL_DIR&#125;&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>编译脚本：Product/Build For/Profiling<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c0e81f46ae34d67e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>编译完脚本会自动弹出生成的framework的文件夹。</p>\n</li>\n</ol>\n<h4 id=\"添加framework到工程\"><a href=\"#添加framework到工程\" class=\"headerlink\" title=\"添加framework到工程\"></a>添加framework到工程</h4><ol>\n<li><p>将目标 framework 和其所用到的资源文件拖到目标工程中<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-5201d15c8f62bcc6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>添加目标框架到复制文件中去<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-136adf812bf55784?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n</ol>\n<h4 id=\"打包提交到-App-Store\"><a href=\"#打包提交到-App-Store\" class=\"headerlink\" title=\"\b打包提交到 App Store\"></a>\b打包提交到 App Store</h4><p>在使用自制的 <em>Framework</em> 的应用程序打包提交到 <em>App Store</em> 的时候，可能会遇到以下问题<code>“Unsupported architectures. Your executable contains unsupported architectures &#39;[x86_64, i386]&#39;”</code>，此时在你<strong>要打包提交的目标程序</strong>的<code>Build Phases</code>下添加<code>Run Script</code>，并将以下内容复制进去：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">APP_PATH=&quot;$&#123;TARGET_BUILD_DIR&#125;/$&#123;WRAPPER_NAME&#125;&quot;</div><div class=\"line\"># This script loops through the frameworks embedded in the application and</div><div class=\"line\"># removes unused architectures.</div><div class=\"line\">find &quot;$APP_PATH&quot; -name &apos;*.framework&apos; -type d | while read -r FRAMEWORK</div><div class=\"line\">do</div><div class=\"line\">FRAMEWORK_EXECUTABLE_NAME=$(defaults read &quot;$FRAMEWORK/Info.plist&quot; CFBundleExecutable)</div><div class=\"line\">FRAMEWORK_EXECUTABLE_PATH=&quot;$FRAMEWORK/$FRAMEWORK_EXECUTABLE_NAME&quot;</div><div class=\"line\">echo &quot;Executable is $FRAMEWORK_EXECUTABLE_PATH&quot;</div><div class=\"line\">EXTRACTED_ARCHS=()</div><div class=\"line\">for ARCH in $ARCHS</div><div class=\"line\">do</div><div class=\"line\">echo &quot;Extracting $ARCH from $FRAMEWORK_EXECUTABLE_NAME&quot;</div><div class=\"line\">lipo -extract &quot;$ARCH&quot; &quot;$FRAMEWORK_EXECUTABLE_PATH&quot; -o &quot;$FRAMEWORK_EXECUTABLE_PATH-$ARCH&quot;</div><div class=\"line\">EXTRACTED_ARCHS+=(&quot;$FRAMEWORK_EXECUTABLE_PATH-$ARCH&quot;)</div><div class=\"line\">done</div><div class=\"line\">echo &quot;Merging extracted architectures: $&#123;ARCHS&#125;&quot;</div><div class=\"line\">lipo -o &quot;$FRAMEWORK_EXECUTABLE_PATH-merged&quot; -create &quot;$&#123;EXTRACTED_ARCHS[@]&#125;&quot;</div><div class=\"line\">rm &quot;$&#123;EXTRACTED_ARCHS[@]&#125;&quot;</div><div class=\"line\">echo &quot;Replacing original executable with thinned version&quot;</div><div class=\"line\">rm &quot;$FRAMEWORK_EXECUTABLE_PATH&quot;</div><div class=\"line\">mv &quot;$FRAMEWORK_EXECUTABLE_PATH-merged&quot; &quot;$FRAMEWORK_EXECUTABLE_PATH&quot;</div><div class=\"line\">done</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-66eccd423305ba62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p><em>到此就结束了</em></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ol>\n<li><a href=\"https://robots.thoughtbot.com/creating-your-first-ios-framework\">Creating your first iOS Framework</a></li>\n</ol>\n"},{"title":"CocoaPods 安装与使用","date":"2017-04-28T04:21:21.000Z","_content":"\n#### 安装\n\n1. 打开Finder/应用程序/实用工具/终端；\n2. *CocoaPods* 是用 *Ruby* 写的，所以运行需要安装 *Ruby* 环境。*Mac* 中已经自带 *Ruby* 环境，如果认为 *Ruby* 环境不够新，可以先在终端输入以下命令进行更新：\n```\ngem update –system\n```\n由于安装 *CocoaPods* 时要访问[cocoapods](https://cocoapods.org)，因为可能被屏蔽了，因此用淘宝的Ruby镜像来访问该网站，在终端输入以下命令进行替换镜像：\n```\ngem sources --remove https://rubygems.org/\ngem sources -a https://ruby.taobao.org/\n```\n成功后，使用以下命令查看：\n```\ngem sources –l\n```\n可以看到替换镜像成功：\n```\n*** CURRENT SOURCES ***\nhttps://ruby.taobao.org/\n```\n接下来是真正的安装，在终端输入以下命令（如果 Ruby 版本过低，以下命令会报错）：\n```\nsudo gem install cocoapods\n```\n如果 Ruby 版本过低导致无法安装，则运行以下命令进行升级：\n```\ncurl -L get.rvm.io | bash -s stable    // 安装 rvm\nsource ~/.bashrc  // 更新\nsource ~/.bash_profile  // 更新\nruby -v  // 查看当前 ruby 版本\nrvm list known  // 列出可安装版本\nrvm install 2.2  // 安装 ruby 2.2 版本\n```\n等待安装成功后使用以下命令配置 *cocoapods*：\n```\npod setup\n```\n3. 安装指定版本的cocoapod：\n```\nsudo gem install cocoapods -v 0.34.4\n```\n\n#### 创建工程并配置第三方类库\n\n1. 首先打开 *Xcode* 新建一个工程，假设为 *Desktop/CocoaPodsDemo* ，并且我们要往该工程中导入 *AFNetworking* 这个类库。\n*AFNetworking* 在 *Github* 中的地址为：https://github.com/AFNetworking/AFNetworking\n这里也说明了如何使用CocoaPods配置该类库：\n![配置](http://upload-images.jianshu.io/upload_images/808722-be113f89b0be8c6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n2. 以上说明是我们应该如何书写 *Podfile* 文件。一般非常流行和成熟的类库都得到了 *CocoaPods* 的支持，并且有这个说明。如何确定 *CocoaPods* 是否支持我们想要加入的目标类库？使用 `Search` 命令搜索类库名：\n```\npod search AFNetworking\n```\n如果 *CocoaPods* 支持，将会输出搜索到的所有类库版本和信息，以及在 *Podfile* 中配置的写法，例如：\n![Podfile文件](http://upload-images.jianshu.io/upload_images/808722-7c928ad3aeabadb7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n3. 先看看普通的工程目录：\n![普通工程目录](http://upload-images.jianshu.io/upload_images/808722-86e60d788da8a1c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n首先在我们的工程目录下创建 *Podfile* 文件，该文件用来控制 *CocoaPods* 的下载内容，该文件是没有后缀的，每个项目只需要一个 *Podfile* 文件，如果需要导入多个类库那么统一在该文件中书写下载内容。\n创建过程：首先 `cd` 到工程目录，然后创建 *Podfile* 并且使用 *vim* 编写：\n  1. 创建文件：\n```\ncd Desktop/CocoaPodsDemo/\npod init    # 自动创建 Podfile 文件，也可以使用 touch Podfile 手动创建 Podfile 文件\n```\n  2. 编写命令：\n```\nplatform:ios, '7.0'\npod \"AFNetworking\", \"~>2.1\"\n```\n*Podfile* 中的两句文字的意思是，当前 *AFNetworking* 支持的 *iOS* 最高版本是 *iOS 7.0*, 要下载的 *AFNetworking* 版本是2.1。\n  3. 在有了 *Podfile* 后，在 *Podfile* 文件所在目录下输入以下命令安装类库：\n```\npod install\n```\n安装完成后，输出信息如下：\n```\nAnalyzing dependencies\nDownloading dependencies\nInstalling AFNetworking (2.1.0)\nGenerating Pods project\nIntegrating client project\n [!] From now on use `CocoaPodsDemo.xcworkspace`.\n```\n最后一句表明，如果要正确打开工程我们应该打开最新生成的 `.xcworkspace` 文件。\n\n#### 编译运行\n\n如果一个项目中已经包含了 *CocoaPods* 的配置文件，但是编译却出现错误，那么我们仅需要一行命令就可以配置好所有的第三方类库了：\n```\npod update\n```\n\n#### 仅添加要加入的库\n```\npod install --verbose --no-repo-update\n```\n\n#### 卸载\n\n在终端运行：\n```\nsudo gem uninstall cocoapods\n```","source":"_posts/CocoaPods-安装与使用.md","raw":"---\ntitle: CocoaPods 安装与使用\ndate: 2017-04-28 12:21:21\ncategories: 工具\ntags: [iOS]\n---\n\n#### 安装\n\n1. 打开Finder/应用程序/实用工具/终端；\n2. *CocoaPods* 是用 *Ruby* 写的，所以运行需要安装 *Ruby* 环境。*Mac* 中已经自带 *Ruby* 环境，如果认为 *Ruby* 环境不够新，可以先在终端输入以下命令进行更新：\n```\ngem update –system\n```\n由于安装 *CocoaPods* 时要访问[cocoapods](https://cocoapods.org)，因为可能被屏蔽了，因此用淘宝的Ruby镜像来访问该网站，在终端输入以下命令进行替换镜像：\n```\ngem sources --remove https://rubygems.org/\ngem sources -a https://ruby.taobao.org/\n```\n成功后，使用以下命令查看：\n```\ngem sources –l\n```\n可以看到替换镜像成功：\n```\n*** CURRENT SOURCES ***\nhttps://ruby.taobao.org/\n```\n接下来是真正的安装，在终端输入以下命令（如果 Ruby 版本过低，以下命令会报错）：\n```\nsudo gem install cocoapods\n```\n如果 Ruby 版本过低导致无法安装，则运行以下命令进行升级：\n```\ncurl -L get.rvm.io | bash -s stable    // 安装 rvm\nsource ~/.bashrc  // 更新\nsource ~/.bash_profile  // 更新\nruby -v  // 查看当前 ruby 版本\nrvm list known  // 列出可安装版本\nrvm install 2.2  // 安装 ruby 2.2 版本\n```\n等待安装成功后使用以下命令配置 *cocoapods*：\n```\npod setup\n```\n3. 安装指定版本的cocoapod：\n```\nsudo gem install cocoapods -v 0.34.4\n```\n\n#### 创建工程并配置第三方类库\n\n1. 首先打开 *Xcode* 新建一个工程，假设为 *Desktop/CocoaPodsDemo* ，并且我们要往该工程中导入 *AFNetworking* 这个类库。\n*AFNetworking* 在 *Github* 中的地址为：https://github.com/AFNetworking/AFNetworking\n这里也说明了如何使用CocoaPods配置该类库：\n![配置](http://upload-images.jianshu.io/upload_images/808722-be113f89b0be8c6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n2. 以上说明是我们应该如何书写 *Podfile* 文件。一般非常流行和成熟的类库都得到了 *CocoaPods* 的支持，并且有这个说明。如何确定 *CocoaPods* 是否支持我们想要加入的目标类库？使用 `Search` 命令搜索类库名：\n```\npod search AFNetworking\n```\n如果 *CocoaPods* 支持，将会输出搜索到的所有类库版本和信息，以及在 *Podfile* 中配置的写法，例如：\n![Podfile文件](http://upload-images.jianshu.io/upload_images/808722-7c928ad3aeabadb7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n3. 先看看普通的工程目录：\n![普通工程目录](http://upload-images.jianshu.io/upload_images/808722-86e60d788da8a1c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n首先在我们的工程目录下创建 *Podfile* 文件，该文件用来控制 *CocoaPods* 的下载内容，该文件是没有后缀的，每个项目只需要一个 *Podfile* 文件，如果需要导入多个类库那么统一在该文件中书写下载内容。\n创建过程：首先 `cd` 到工程目录，然后创建 *Podfile* 并且使用 *vim* 编写：\n  1. 创建文件：\n```\ncd Desktop/CocoaPodsDemo/\npod init    # 自动创建 Podfile 文件，也可以使用 touch Podfile 手动创建 Podfile 文件\n```\n  2. 编写命令：\n```\nplatform:ios, '7.0'\npod \"AFNetworking\", \"~>2.1\"\n```\n*Podfile* 中的两句文字的意思是，当前 *AFNetworking* 支持的 *iOS* 最高版本是 *iOS 7.0*, 要下载的 *AFNetworking* 版本是2.1。\n  3. 在有了 *Podfile* 后，在 *Podfile* 文件所在目录下输入以下命令安装类库：\n```\npod install\n```\n安装完成后，输出信息如下：\n```\nAnalyzing dependencies\nDownloading dependencies\nInstalling AFNetworking (2.1.0)\nGenerating Pods project\nIntegrating client project\n [!] From now on use `CocoaPodsDemo.xcworkspace`.\n```\n最后一句表明，如果要正确打开工程我们应该打开最新生成的 `.xcworkspace` 文件。\n\n#### 编译运行\n\n如果一个项目中已经包含了 *CocoaPods* 的配置文件，但是编译却出现错误，那么我们仅需要一行命令就可以配置好所有的第三方类库了：\n```\npod update\n```\n\n#### 仅添加要加入的库\n```\npod install --verbose --no-repo-update\n```\n\n#### 卸载\n\n在终端运行：\n```\nsudo gem uninstall cocoapods\n```","slug":"CocoaPods-安装与使用","published":1,"updated":"2017-04-28T04:24:07.000Z","_id":"cj21c1la50004ca07quf8ecfl","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ol>\n<li>打开Finder/应用程序/实用工具/终端；</li>\n<li><em>CocoaPods</em> 是用 <em>Ruby</em> 写的，所以运行需要安装 <em>Ruby</em> 环境。<em>Mac</em> 中已经自带 <em>Ruby</em> 环境，如果认为 <em>Ruby</em> 环境不够新，可以先在终端输入以下命令进行更新：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem update –system</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>由于安装 <em>CocoaPods</em> 时要访问<a href=\"https://cocoapods.org\" target=\"_blank\" rel=\"external\">cocoapods</a>，因为可能被屏蔽了，因此用淘宝的Ruby镜像来访问该网站，在终端输入以下命令进行替换镜像：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem sources --remove https://rubygems.org/</div><div class=\"line\">gem sources -a https://ruby.taobao.org/</div></pre></td></tr></table></figure></p>\n<p>成功后，使用以下命令查看：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem sources –l</div></pre></td></tr></table></figure></p>\n<p>可以看到替换镜像成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">*** CURRENT SOURCES ***</div><div class=\"line\">https://ruby.taobao.org/</div></pre></td></tr></table></figure></p>\n<p>接下来是真正的安装，在终端输入以下命令（如果 Ruby 版本过低，以下命令会报错）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gem install cocoapods</div></pre></td></tr></table></figure></p>\n<p>如果 Ruby 版本过低导致无法安装，则运行以下命令进行升级：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -L get.rvm.io | bash -s stable    // 安装 rvm</div><div class=\"line\">source ~/.bashrc  // 更新</div><div class=\"line\">source ~/.bash_profile  // 更新</div><div class=\"line\">ruby -v  // 查看当前 ruby 版本</div><div class=\"line\">rvm list known  // 列出可安装版本</div><div class=\"line\">rvm install 2.2  // 安装 ruby 2.2 版本</div></pre></td></tr></table></figure></p>\n<p>等待安装成功后使用以下命令配置 <em>cocoapods</em>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod setup</div></pre></td></tr></table></figure></p>\n<ol>\n<li>安装指定版本的cocoapod：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gem install cocoapods -v 0.34.4</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"创建工程并配置第三方类库\"><a href=\"#创建工程并配置第三方类库\" class=\"headerlink\" title=\"创建工程并配置第三方类库\"></a>创建工程并配置第三方类库</h4><ol>\n<li>首先打开 <em>Xcode</em> 新建一个工程，假设为 <em>Desktop/CocoaPodsDemo</em> ，并且我们要往该工程中导入 <em>AFNetworking</em> 这个类库。<br><em>AFNetworking</em> 在 <em>Github</em> 中的地址为：<a href=\"https://github.com/AFNetworking/AFNetworking\" target=\"_blank\" rel=\"external\">https://github.com/AFNetworking/AFNetworking</a><br>这里也说明了如何使用CocoaPods配置该类库：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-be113f89b0be8c6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"配置\"></li>\n<li>以上说明是我们应该如何书写 <em>Podfile</em> 文件。一般非常流行和成熟的类库都得到了 <em>CocoaPods</em> 的支持，并且有这个说明。如何确定 <em>CocoaPods</em> 是否支持我们想要加入的目标类库？使用 <code>Search</code> 命令搜索类库名：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod search AFNetworking</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>如果 <em>CocoaPods</em> 支持，将会输出搜索到的所有类库版本和信息，以及在 <em>Podfile</em> 中配置的写法，例如：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-7c928ad3aeabadb7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Podfile文件\"></p>\n<ol>\n<li><p>先看看普通的工程目录：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-86e60d788da8a1c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"普通工程目录\"><br>首先在我们的工程目录下创建 <em>Podfile</em> 文件，该文件用来控制 <em>CocoaPods</em> 的下载内容，该文件是没有后缀的，每个项目只需要一个 <em>Podfile</em> 文件，如果需要导入多个类库那么统一在该文件中书写下载内容。<br>创建过程：首先 <code>cd</code> 到工程目录，然后创建 <em>Podfile</em> 并且使用 <em>vim</em> 编写：</p>\n<ol>\n<li><p>创建文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd Desktop/CocoaPodsDemo/</div><div class=\"line\">pod init    # 自动创建 Podfile 文件，也可以使用 touch Podfile 手动创建 Podfile 文件</div></pre></td></tr></table></figure>\n</li>\n<li><p>编写命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">platform:ios, &apos;7.0&apos;</div><div class=\"line\">pod &quot;AFNetworking&quot;, &quot;~&gt;2.1&quot;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<p><em>Podfile</em> 中的两句文字的意思是，当前 <em>AFNetworking</em> 支持的 <em>iOS</em> 最高版本是 <em>iOS 7.0</em>, 要下载的 <em>AFNetworking</em> 版本是2.1。</p>\n<ol>\n<li>在有了 <em>Podfile</em> 后，在 <em>Podfile</em> 文件所在目录下输入以下命令安装类库：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod install</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>安装完成后，输出信息如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Analyzing dependencies</div><div class=\"line\">Downloading dependencies</div><div class=\"line\">Installing AFNetworking (2.1.0)</div><div class=\"line\">Generating Pods project</div><div class=\"line\">Integrating client project</div><div class=\"line\"> [!] From now on use `CocoaPodsDemo.xcworkspace`.</div></pre></td></tr></table></figure></p>\n<p>最后一句表明，如果要正确打开工程我们应该打开最新生成的 <code>.xcworkspace</code> 文件。</p>\n<h4 id=\"编译运行\"><a href=\"#编译运行\" class=\"headerlink\" title=\"编译运行\"></a>编译运行</h4><p>如果一个项目中已经包含了 <em>CocoaPods</em> 的配置文件，但是编译却出现错误，那么我们仅需要一行命令就可以配置好所有的第三方类库了：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod update</div></pre></td></tr></table></figure></p>\n<h4 id=\"仅添加要加入的库\"><a href=\"#仅添加要加入的库\" class=\"headerlink\" title=\"仅添加要加入的库\"></a>仅添加要加入的库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod install --verbose --no-repo-update</div></pre></td></tr></table></figure>\n<h4 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h4><p>在终端运行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gem uninstall cocoapods</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ol>\n<li>打开Finder/应用程序/实用工具/终端；</li>\n<li><em>CocoaPods</em> 是用 <em>Ruby</em> 写的，所以运行需要安装 <em>Ruby</em> 环境。<em>Mac</em> 中已经自带 <em>Ruby</em> 环境，如果认为 <em>Ruby</em> 环境不够新，可以先在终端输入以下命令进行更新：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem update –system</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>由于安装 <em>CocoaPods</em> 时要访问<a href=\"https://cocoapods.org\">cocoapods</a>，因为可能被屏蔽了，因此用淘宝的Ruby镜像来访问该网站，在终端输入以下命令进行替换镜像：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem sources --remove https://rubygems.org/</div><div class=\"line\">gem sources -a https://ruby.taobao.org/</div></pre></td></tr></table></figure></p>\n<p>成功后，使用以下命令查看：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem sources –l</div></pre></td></tr></table></figure></p>\n<p>可以看到替换镜像成功：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">*** CURRENT SOURCES ***</div><div class=\"line\">https://ruby.taobao.org/</div></pre></td></tr></table></figure></p>\n<p>接下来是真正的安装，在终端输入以下命令（如果 Ruby 版本过低，以下命令会报错）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gem install cocoapods</div></pre></td></tr></table></figure></p>\n<p>如果 Ruby 版本过低导致无法安装，则运行以下命令进行升级：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -L get.rvm.io | bash -s stable    // 安装 rvm</div><div class=\"line\">source ~/.bashrc  // 更新</div><div class=\"line\">source ~/.bash_profile  // 更新</div><div class=\"line\">ruby -v  // 查看当前 ruby 版本</div><div class=\"line\">rvm list known  // 列出可安装版本</div><div class=\"line\">rvm install 2.2  // 安装 ruby 2.2 版本</div></pre></td></tr></table></figure></p>\n<p>等待安装成功后使用以下命令配置 <em>cocoapods</em>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod setup</div></pre></td></tr></table></figure></p>\n<ol>\n<li>安装指定版本的cocoapod：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gem install cocoapods -v 0.34.4</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"创建工程并配置第三方类库\"><a href=\"#创建工程并配置第三方类库\" class=\"headerlink\" title=\"创建工程并配置第三方类库\"></a>创建工程并配置第三方类库</h4><ol>\n<li>首先打开 <em>Xcode</em> 新建一个工程，假设为 <em>Desktop/CocoaPodsDemo</em> ，并且我们要往该工程中导入 <em>AFNetworking</em> 这个类库。<br><em>AFNetworking</em> 在 <em>Github</em> 中的地址为：<a href=\"https://github.com/AFNetworking/AFNetworking\">https://github.com/AFNetworking/AFNetworking</a><br>这里也说明了如何使用CocoaPods配置该类库：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-be113f89b0be8c6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"配置\"></li>\n<li>以上说明是我们应该如何书写 <em>Podfile</em> 文件。一般非常流行和成熟的类库都得到了 <em>CocoaPods</em> 的支持，并且有这个说明。如何确定 <em>CocoaPods</em> 是否支持我们想要加入的目标类库？使用 <code>Search</code> 命令搜索类库名：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod search AFNetworking</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>如果 <em>CocoaPods</em> 支持，将会输出搜索到的所有类库版本和信息，以及在 <em>Podfile</em> 中配置的写法，例如：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-7c928ad3aeabadb7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Podfile文件\"></p>\n<ol>\n<li><p>先看看普通的工程目录：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-86e60d788da8a1c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"普通工程目录\"><br>首先在我们的工程目录下创建 <em>Podfile</em> 文件，该文件用来控制 <em>CocoaPods</em> 的下载内容，该文件是没有后缀的，每个项目只需要一个 <em>Podfile</em> 文件，如果需要导入多个类库那么统一在该文件中书写下载内容。<br>创建过程：首先 <code>cd</code> 到工程目录，然后创建 <em>Podfile</em> 并且使用 <em>vim</em> 编写：</p>\n<ol>\n<li><p>创建文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd Desktop/CocoaPodsDemo/</div><div class=\"line\">pod init    # 自动创建 Podfile 文件，也可以使用 touch Podfile 手动创建 Podfile 文件</div></pre></td></tr></table></figure>\n</li>\n<li><p>编写命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">platform:ios, &apos;7.0&apos;</div><div class=\"line\">pod &quot;AFNetworking&quot;, &quot;~&gt;2.1&quot;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<p><em>Podfile</em> 中的两句文字的意思是，当前 <em>AFNetworking</em> 支持的 <em>iOS</em> 最高版本是 <em>iOS 7.0</em>, 要下载的 <em>AFNetworking</em> 版本是2.1。</p>\n<ol>\n<li>在有了 <em>Podfile</em> 后，在 <em>Podfile</em> 文件所在目录下输入以下命令安装类库：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod install</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>安装完成后，输出信息如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Analyzing dependencies</div><div class=\"line\">Downloading dependencies</div><div class=\"line\">Installing AFNetworking (2.1.0)</div><div class=\"line\">Generating Pods project</div><div class=\"line\">Integrating client project</div><div class=\"line\"> [!] From now on use `CocoaPodsDemo.xcworkspace`.</div></pre></td></tr></table></figure></p>\n<p>最后一句表明，如果要正确打开工程我们应该打开最新生成的 <code>.xcworkspace</code> 文件。</p>\n<h4 id=\"编译运行\"><a href=\"#编译运行\" class=\"headerlink\" title=\"编译运行\"></a>编译运行</h4><p>如果一个项目中已经包含了 <em>CocoaPods</em> 的配置文件，但是编译却出现错误，那么我们仅需要一行命令就可以配置好所有的第三方类库了：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod update</div></pre></td></tr></table></figure></p>\n<h4 id=\"仅添加要加入的库\"><a href=\"#仅添加要加入的库\" class=\"headerlink\" title=\"仅添加要加入的库\"></a>仅添加要加入的库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pod install --verbose --no-repo-update</div></pre></td></tr></table></figure>\n<h4 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h4><p>在终端运行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gem uninstall cocoapods</div></pre></td></tr></table></figure></p>\n"},{"title":"iOS 客户端与服务端做时间同步","date":"2017-04-28T01:37:05.000Z","_content":"\n![](https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-416679.jpg)\n\n### 需求\n\n我们做客户端的时候，有时会需要对客户端与服务器的时间进行同步，比如抢购活动、倒计时等。这时我们要考虑如何准备地与服务器的时间进行同步，同时防止用户本地的时间有误差时导致的问题。\n\n### 分析\n\n#### 描述\n\n为了实现以上需求，我们需要：\n\n1. 获取服务器某一时刻 `A` 的时间；\n\n2. 记录获取到时刻 `A` 时的本地时间 `B`；\n\n3. 需要用到时间时，获取当前本地时间 `C`，当 `C - B` 作为时间间隔 `D`，则 `A + D` 则是当前服务器的时间。\n\n#### 实现\n\n1. 从上面的步骤，我们可以得到，要消除用户修改时间导致的影响，必须保证 `B` 和 `C` 与系统时间无关；\n\n2. `iOS` 中正好有提供这样两个接口：\n\n 1. 获取设备当前时间 `Now`，该值受系统时间影响，用户如果修改时间，值也会随着变化；\n \n 2. 获取设备上次重启的时间 `BootTime`，该值受系统时间影响，用户如果修改时间，值也会随着变化；；\n\n3. 由上面 `iOS` 提供的两个接口，我们可以获取本地时间 `B`、`C`：设备自上次重启后运行的时间（`BootTime - Now`），该值与系统时间无关；\n\n### 代码实现\n\n获取当前 Unix Time：\n\n```\n    static func now() -> Int {\n        var now =  timeval()\n        var tz = timezone()\n        gettimeofday(&now, &tz)\n        return now.tv_sec\n    }\n```\n\n获取设备上次重启的 Unix Time：\n\n```\n    func boottime() -> Int {\n        \n        var mid = [CTL_KERN, KERN_BOOTTIME]\n        var boottime = timeval()\n        var size = MemoryLayout.size(ofValue: boottime)\n        \n        if sysctl(&mid, 2, &boottime, &size, nil, 0) != -1 {\n            return boottime.tv_sec\n        }\n        return 0\n    }\n```\n\n时间校准：\n\n```\n// 接口获取服务器时间处理\nlet serverTime = xxx\t\t\t\t\t\t// 获取到的服务器时间\nlet runTime0 = now() - boottime()\t\t\t// 当前设备运行时间\n\n// 需要用到时间时\nlet runTime1 = now() - boottime()\t\t\t// 当前时刻设备运行时间\nlet currentTime = serverTime + runTime1 \t// 当前服务器时间\n```\n\n### 参考\n\n[iOS关于时间的处理\n](http://mrpeak.cn/blog/ios-time/)","source":"_posts/iOS 客户端与服务端做时间同步.md","raw":"---\ntitle: iOS 客户端与服务端做时间同步\ndate: 2017-04-28 09:37:05\ncategories: 编程\ntags: [iOS, 服务端]\n---\n\n![](https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-416679.jpg)\n\n### 需求\n\n我们做客户端的时候，有时会需要对客户端与服务器的时间进行同步，比如抢购活动、倒计时等。这时我们要考虑如何准备地与服务器的时间进行同步，同时防止用户本地的时间有误差时导致的问题。\n\n### 分析\n\n#### 描述\n\n为了实现以上需求，我们需要：\n\n1. 获取服务器某一时刻 `A` 的时间；\n\n2. 记录获取到时刻 `A` 时的本地时间 `B`；\n\n3. 需要用到时间时，获取当前本地时间 `C`，当 `C - B` 作为时间间隔 `D`，则 `A + D` 则是当前服务器的时间。\n\n#### 实现\n\n1. 从上面的步骤，我们可以得到，要消除用户修改时间导致的影响，必须保证 `B` 和 `C` 与系统时间无关；\n\n2. `iOS` 中正好有提供这样两个接口：\n\n 1. 获取设备当前时间 `Now`，该值受系统时间影响，用户如果修改时间，值也会随着变化；\n \n 2. 获取设备上次重启的时间 `BootTime`，该值受系统时间影响，用户如果修改时间，值也会随着变化；；\n\n3. 由上面 `iOS` 提供的两个接口，我们可以获取本地时间 `B`、`C`：设备自上次重启后运行的时间（`BootTime - Now`），该值与系统时间无关；\n\n### 代码实现\n\n获取当前 Unix Time：\n\n```\n    static func now() -> Int {\n        var now =  timeval()\n        var tz = timezone()\n        gettimeofday(&now, &tz)\n        return now.tv_sec\n    }\n```\n\n获取设备上次重启的 Unix Time：\n\n```\n    func boottime() -> Int {\n        \n        var mid = [CTL_KERN, KERN_BOOTTIME]\n        var boottime = timeval()\n        var size = MemoryLayout.size(ofValue: boottime)\n        \n        if sysctl(&mid, 2, &boottime, &size, nil, 0) != -1 {\n            return boottime.tv_sec\n        }\n        return 0\n    }\n```\n\n时间校准：\n\n```\n// 接口获取服务器时间处理\nlet serverTime = xxx\t\t\t\t\t\t// 获取到的服务器时间\nlet runTime0 = now() - boottime()\t\t\t// 当前设备运行时间\n\n// 需要用到时间时\nlet runTime1 = now() - boottime()\t\t\t// 当前时刻设备运行时间\nlet currentTime = serverTime + runTime1 \t// 当前服务器时间\n```\n\n### 参考\n\n[iOS关于时间的处理\n](http://mrpeak.cn/blog/ios-time/)","slug":"iOS 客户端与服务端做时间同步","published":1,"updated":"2017-04-28T03:26:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21c1la70005ca07b4wcg1ai","content":"<p><img src=\"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-416679.jpg\" alt=\"\"></p>\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>我们做客户端的时候，有时会需要对客户端与服务器的时间进行同步，比如抢购活动、倒计时等。这时我们要考虑如何准备地与服务器的时间进行同步，同时防止用户本地的时间有误差时导致的问题。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><h4 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h4><p>为了实现以上需求，我们需要：</p>\n<ol>\n<li><p>获取服务器某一时刻 <code>A</code> 的时间；</p>\n</li>\n<li><p>记录获取到时刻 <code>A</code> 时的本地时间 <code>B</code>；</p>\n</li>\n<li><p>需要用到时间时，获取当前本地时间 <code>C</code>，当 <code>C - B</code> 作为时间间隔 <code>D</code>，则 <code>A + D</code> 则是当前服务器的时间。</p>\n</li>\n</ol>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><ol>\n<li><p>从上面的步骤，我们可以得到，要消除用户修改时间导致的影响，必须保证 <code>B</code> 和 <code>C</code> 与系统时间无关；</p>\n</li>\n<li><p><code>iOS</code> 中正好有提供这样两个接口：</p>\n<ol>\n<li><p>获取设备当前时间 <code>Now</code>，该值受系统时间影响，用户如果修改时间，值也会随着变化；</p>\n</li>\n<li><p>获取设备上次重启的时间 <code>BootTime</code>，该值受系统时间影响，用户如果修改时间，值也会随着变化；；</p>\n</li>\n</ol>\n</li>\n<li><p>由上面 <code>iOS</code> 提供的两个接口，我们可以获取本地时间 <code>B</code>、<code>C</code>：设备自上次重启后运行的时间（<code>BootTime - Now</code>），该值与系统时间无关；</p>\n</li>\n</ol>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><p>获取当前 Unix Time：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">static func now() -&gt; Int &#123;</div><div class=\"line\">    var now =  timeval()</div><div class=\"line\">    var tz = timezone()</div><div class=\"line\">    gettimeofday(&amp;now, &amp;tz)</div><div class=\"line\">    return now.tv_sec</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>获取设备上次重启的 Unix Time：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">func boottime() -&gt; Int &#123;</div><div class=\"line\">    </div><div class=\"line\">    var mid = [CTL_KERN, KERN_BOOTTIME]</div><div class=\"line\">    var boottime = timeval()</div><div class=\"line\">    var size = MemoryLayout.size(ofValue: boottime)</div><div class=\"line\">    </div><div class=\"line\">    if sysctl(&amp;mid, 2, &amp;boottime, &amp;size, nil, 0) != -1 &#123;</div><div class=\"line\">        return boottime.tv_sec</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>时间校准：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 接口获取服务器时间处理</div><div class=\"line\">let serverTime = xxx\t\t\t\t\t\t// 获取到的服务器时间</div><div class=\"line\">let runTime0 = now() - boottime()\t\t\t// 当前设备运行时间</div><div class=\"line\"></div><div class=\"line\">// 需要用到时间时</div><div class=\"line\">let runTime1 = now() - boottime()\t\t\t// 当前时刻设备运行时间</div><div class=\"line\">let currentTime = serverTime + runTime1 \t// 当前服务器时间</div></pre></td></tr></table></figure>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://mrpeak.cn/blog/ios-time/\" target=\"_blank\" rel=\"external\">iOS关于时间的处理\n</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-416679.jpg\" alt=\"\"></p>\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>我们做客户端的时候，有时会需要对客户端与服务器的时间进行同步，比如抢购活动、倒计时等。这时我们要考虑如何准备地与服务器的时间进行同步，同时防止用户本地的时间有误差时导致的问题。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><h4 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h4><p>为了实现以上需求，我们需要：</p>\n<ol>\n<li><p>获取服务器某一时刻 <code>A</code> 的时间；</p>\n</li>\n<li><p>记录获取到时刻 <code>A</code> 时的本地时间 <code>B</code>；</p>\n</li>\n<li><p>需要用到时间时，获取当前本地时间 <code>C</code>，当 <code>C - B</code> 作为时间间隔 <code>D</code>，则 <code>A + D</code> 则是当前服务器的时间。</p>\n</li>\n</ol>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><ol>\n<li><p>从上面的步骤，我们可以得到，要消除用户修改时间导致的影响，必须保证 <code>B</code> 和 <code>C</code> 与系统时间无关；</p>\n</li>\n<li><p><code>iOS</code> 中正好有提供这样两个接口：</p>\n<ol>\n<li><p>获取设备当前时间 <code>Now</code>，该值受系统时间影响，用户如果修改时间，值也会随着变化；</p>\n</li>\n<li><p>获取设备上次重启的时间 <code>BootTime</code>，该值受系统时间影响，用户如果修改时间，值也会随着变化；；</p>\n</li>\n</ol>\n</li>\n<li><p>由上面 <code>iOS</code> 提供的两个接口，我们可以获取本地时间 <code>B</code>、<code>C</code>：设备自上次重启后运行的时间（<code>BootTime - Now</code>），该值与系统时间无关；</p>\n</li>\n</ol>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><p>获取当前 Unix Time：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">static func now() -&gt; Int &#123;</div><div class=\"line\">    var now =  timeval()</div><div class=\"line\">    var tz = timezone()</div><div class=\"line\">    gettimeofday(&amp;now, &amp;tz)</div><div class=\"line\">    return now.tv_sec</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>获取设备上次重启的 Unix Time：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">func boottime() -&gt; Int &#123;</div><div class=\"line\">    </div><div class=\"line\">    var mid = [CTL_KERN, KERN_BOOTTIME]</div><div class=\"line\">    var boottime = timeval()</div><div class=\"line\">    var size = MemoryLayout.size(ofValue: boottime)</div><div class=\"line\">    </div><div class=\"line\">    if sysctl(&amp;mid, 2, &amp;boottime, &amp;size, nil, 0) != -1 &#123;</div><div class=\"line\">        return boottime.tv_sec</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>时间校准：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 接口获取服务器时间处理</div><div class=\"line\">let serverTime = xxx\t\t\t\t\t\t// 获取到的服务器时间</div><div class=\"line\">let runTime0 = now() - boottime()\t\t\t// 当前设备运行时间</div><div class=\"line\"></div><div class=\"line\">// 需要用到时间时</div><div class=\"line\">let runTime1 = now() - boottime()\t\t\t// 当前时刻设备运行时间</div><div class=\"line\">let currentTime = serverTime + runTime1 \t// 当前服务器时间</div></pre></td></tr></table></figure>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://mrpeak.cn/blog/ios-time/\">iOS关于时间的处理\n</a></p>\n"},{"title":"iOS 国际化","date":"2017-04-28T04:19:09.000Z","_content":"\n![](http://upload-images.jianshu.io/upload_images/808722-4e513244a3d423f3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 应用国际化准备\n\n1. 点击`工程/PROJECT/Info/Localizations`，添加简体中文支持，如果想支持繁体，也可继续添加，其他语言亦然。\n![](http://upload-images.jianshu.io/upload_images/808722-c2430fb5b2f0b2d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 修改`Info.plist`文件，添加`Application has localized display name`，值为 `Boolean` 类型的 `YES`\n![\n](http://image.xiaomantou.net/FuxJ7t1NeU5cJNp1dMLAfvSbzoqT)\n\n#### 应用名称国际化\n\n1. 创建`InfoPlist.strings`，文件名必须为`InfoPlist`，否则无效。\n![](http://upload-images.jianshu.io/upload_images/808722-b3339186b83c43e7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-c5d71a42018259d3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 点击之前创建的`InfoPlist.strings` - 点击右边的`Localizion/添加简体中文`\n![](http://upload-images.jianshu.io/upload_images/808722-5e0eebb7710c59c4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n3. 在`InfoPlist.strings`文件中对应的语言文件填入应用的名称\n```\n\"CFBundleDisplayName\" = \"English\";\n```\n![](http://upload-images.jianshu.io/upload_images/808722-bf7274872fa97c84?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-463026e17dd37eb4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 应用文字国际化\n\n1. 按上边`应用名称国际化`步骤创建 `Localizable.strings` 文件\n![](http://upload-images.jianshu.io/upload_images/808722-728a5fbbc60759fd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-c76cb0efc27635f7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 在`Localizable.strings`文件中对应的语言文件填入对应内容的键值对\n![](http://upload-images.jianshu.io/upload_images/808722-2a542f7d63ad63a4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-728a5fbbc60759fd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n3. 使用国际化文字\n```\nlet loginStr = NSLocalizedString(\"account_login\", comment: \"\");\n```\n\n#### 应用图标国际化\n\n`有机会更新^-^`\n\n以下是测试工程的文件：\n![](http://upload-images.jianshu.io/upload_images/808722-712d5e13e773c811?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","source":"_posts/iOS-国际化.md","raw":"---\ntitle: iOS 国际化\ndate: 2017-04-28 12:19:09\ncategories: 编程\ntags: [iOS]\n---\n\n![](http://upload-images.jianshu.io/upload_images/808722-4e513244a3d423f3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 应用国际化准备\n\n1. 点击`工程/PROJECT/Info/Localizations`，添加简体中文支持，如果想支持繁体，也可继续添加，其他语言亦然。\n![](http://upload-images.jianshu.io/upload_images/808722-c2430fb5b2f0b2d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 修改`Info.plist`文件，添加`Application has localized display name`，值为 `Boolean` 类型的 `YES`\n![\n](http://image.xiaomantou.net/FuxJ7t1NeU5cJNp1dMLAfvSbzoqT)\n\n#### 应用名称国际化\n\n1. 创建`InfoPlist.strings`，文件名必须为`InfoPlist`，否则无效。\n![](http://upload-images.jianshu.io/upload_images/808722-b3339186b83c43e7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-c5d71a42018259d3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 点击之前创建的`InfoPlist.strings` - 点击右边的`Localizion/添加简体中文`\n![](http://upload-images.jianshu.io/upload_images/808722-5e0eebb7710c59c4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n3. 在`InfoPlist.strings`文件中对应的语言文件填入应用的名称\n```\n\"CFBundleDisplayName\" = \"English\";\n```\n![](http://upload-images.jianshu.io/upload_images/808722-bf7274872fa97c84?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-463026e17dd37eb4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 应用文字国际化\n\n1. 按上边`应用名称国际化`步骤创建 `Localizable.strings` 文件\n![](http://upload-images.jianshu.io/upload_images/808722-728a5fbbc60759fd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-c76cb0efc27635f7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n2. 在`Localizable.strings`文件中对应的语言文件填入对应内容的键值对\n![](http://upload-images.jianshu.io/upload_images/808722-2a542f7d63ad63a4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-728a5fbbc60759fd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n3. 使用国际化文字\n```\nlet loginStr = NSLocalizedString(\"account_login\", comment: \"\");\n```\n\n#### 应用图标国际化\n\n`有机会更新^-^`\n\n以下是测试工程的文件：\n![](http://upload-images.jianshu.io/upload_images/808722-712d5e13e773c811?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","slug":"iOS-国际化","published":1,"updated":"2017-04-28T04:20:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21c1lac0006ca077kodds9a","content":"<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-4e513244a3d423f3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"应用国际化准备\"><a href=\"#应用国际化准备\" class=\"headerlink\" title=\"应用国际化准备\"></a>应用国际化准备</h4><ol>\n<li><p>点击<code>工程/PROJECT/Info/Localizations</code>，添加简体中文支持，如果想支持繁体，也可继续添加，其他语言亦然。<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c2430fb5b2f0b2d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>修改<code>Info.plist</code>文件，添加<code>Application has localized display name</code>，值为 <code>Boolean</code> 类型的 <code>YES</code><br><img src=\"http://image.xiaomantou.net/FuxJ7t1NeU5cJNp1dMLAfvSbzoqT\" alt=\"\n\"></p>\n</li>\n</ol>\n<h4 id=\"应用名称国际化\"><a href=\"#应用名称国际化\" class=\"headerlink\" title=\"应用名称国际化\"></a>应用名称国际化</h4><ol>\n<li><p>创建<code>InfoPlist.strings</code>，文件名必须为<code>InfoPlist</code>，否则无效。<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-b3339186b83c43e7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c5d71a42018259d3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>点击之前创建的<code>InfoPlist.strings</code> - 点击右边的<code>Localizion/添加简体中文</code><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-5e0eebb7710c59c4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>在<code>InfoPlist.strings</code>文件中对应的语言文件填入应用的名称</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;CFBundleDisplayName&quot; = &quot;English&quot;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-bf7274872fa97c84?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-463026e17dd37eb4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"应用文字国际化\"><a href=\"#应用文字国际化\" class=\"headerlink\" title=\"应用文字国际化\"></a>应用文字国际化</h4><ol>\n<li><p>按上边<code>应用名称国际化</code>步骤创建 <code>Localizable.strings</code> 文件<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-728a5fbbc60759fd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c76cb0efc27635f7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>在<code>Localizable.strings</code>文件中对应的语言文件填入对应内容的键值对<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-2a542f7d63ad63a4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-728a5fbbc60759fd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>使用国际化文字</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">let loginStr = NSLocalizedString(&quot;account_login&quot;, comment: &quot;&quot;);</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"应用图标国际化\"><a href=\"#应用图标国际化\" class=\"headerlink\" title=\"应用图标国际化\"></a>应用图标国际化</h4><p><code>有机会更新^-^</code></p>\n<p>以下是测试工程的文件：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-712d5e13e773c811?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-4e513244a3d423f3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"应用国际化准备\"><a href=\"#应用国际化准备\" class=\"headerlink\" title=\"应用国际化准备\"></a>应用国际化准备</h4><ol>\n<li><p>点击<code>工程/PROJECT/Info/Localizations</code>，添加简体中文支持，如果想支持繁体，也可继续添加，其他语言亦然。<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c2430fb5b2f0b2d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>修改<code>Info.plist</code>文件，添加<code>Application has localized display name</code>，值为 <code>Boolean</code> 类型的 <code>YES</code><br><img src=\"http://image.xiaomantou.net/FuxJ7t1NeU5cJNp1dMLAfvSbzoqT\" alt=\"\n\"></p>\n</li>\n</ol>\n<h4 id=\"应用名称国际化\"><a href=\"#应用名称国际化\" class=\"headerlink\" title=\"应用名称国际化\"></a>应用名称国际化</h4><ol>\n<li><p>创建<code>InfoPlist.strings</code>，文件名必须为<code>InfoPlist</code>，否则无效。<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-b3339186b83c43e7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c5d71a42018259d3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>点击之前创建的<code>InfoPlist.strings</code> - 点击右边的<code>Localizion/添加简体中文</code><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-5e0eebb7710c59c4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>在<code>InfoPlist.strings</code>文件中对应的语言文件填入应用的名称</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;CFBundleDisplayName&quot; = &quot;English&quot;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/808722-bf7274872fa97c84?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-463026e17dd37eb4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"应用文字国际化\"><a href=\"#应用文字国际化\" class=\"headerlink\" title=\"应用文字国际化\"></a>应用文字国际化</h4><ol>\n<li><p>按上边<code>应用名称国际化</code>步骤创建 <code>Localizable.strings</code> 文件<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-728a5fbbc60759fd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-c76cb0efc27635f7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>在<code>Localizable.strings</code>文件中对应的语言文件填入对应内容的键值对<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-2a542f7d63ad63a4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-728a5fbbc60759fd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>使用国际化文字</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">let loginStr = NSLocalizedString(&quot;account_login&quot;, comment: &quot;&quot;);</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"应用图标国际化\"><a href=\"#应用图标国际化\" class=\"headerlink\" title=\"应用图标国际化\"></a>应用图标国际化</h4><p><code>有机会更新^-^</code></p>\n<p>以下是测试工程的文件：<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-712d5e13e773c811?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n"},{"title":"使用 xcworkspace 管理 iOS 工程","date":"2017-04-28T03:34:07.000Z","_content":"\n1. 首先创建目标工程\n![](http://upload-images.jianshu.io/upload_images/808722-93579b276bc93fa3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-4cd04d007ff6d5e2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n\n2. 创建工作空间`xcworkspace`文件，并将创建的`*.xcworkspace`文件放到刚创建的目标工程同级目录下\n![](http://upload-images.jianshu.io/upload_images/808722-6d983cd8d472954d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-9cfe3f4ff8feeec6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n3. 关闭刚刚创建的目标工程，打开`*.xcworkspace`文件，把刚刚创建的目标工程添加到工作空间中来\n![](http://upload-images.jianshu.io/upload_images/808722-dab6c30a1c207ed0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-167e788bd16469c8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-6c6a78020755b51d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n\n4. 如果要添加一些框架，则将目标框架放到与目标工程同级目录下\n![](http://upload-images.jianshu.io/upload_images/808722-f7ff128d3688e3c5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-3829418ecfecf67a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n5. 与`步骤3`一样，将框架添加到工作空间中来\n![](http://upload-images.jianshu.io/upload_images/808722-930aa09ff00d97d7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-f6e24dd5ba35db97?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n6. 在目标工程中引入框架\n![](http://upload-images.jianshu.io/upload_images/808722-fc384fad36f87ba8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-57719786b7321759?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-49386ebec0e4cc4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n7. 接下来就可以在目标工程中使用引入的框架\n![](http://upload-images.jianshu.io/upload_images/808722-2c198d51d087bc6b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n*PS：如果要使用到引入框架的方法，需要将对应的类和其方法设置为`public`，具体在[Xcode 7 制作 framework](/2017/04/28/Xcode-7-制作-framework/)里有介绍。*","source":"_posts/使用-xcworkspace-管理-iOS-工程.md","raw":"---\ntitle: 使用 xcworkspace 管理 iOS 工程\ndate: 2017-04-28 11:34:07\ncategories: 编程\ntags: [iOS, Xcode]\n---\n\n1. 首先创建目标工程\n![](http://upload-images.jianshu.io/upload_images/808722-93579b276bc93fa3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-4cd04d007ff6d5e2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n\n2. 创建工作空间`xcworkspace`文件，并将创建的`*.xcworkspace`文件放到刚创建的目标工程同级目录下\n![](http://upload-images.jianshu.io/upload_images/808722-6d983cd8d472954d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-9cfe3f4ff8feeec6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n3. 关闭刚刚创建的目标工程，打开`*.xcworkspace`文件，把刚刚创建的目标工程添加到工作空间中来\n![](http://upload-images.jianshu.io/upload_images/808722-dab6c30a1c207ed0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-167e788bd16469c8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-6c6a78020755b51d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n\n4. 如果要添加一些框架，则将目标框架放到与目标工程同级目录下\n![](http://upload-images.jianshu.io/upload_images/808722-f7ff128d3688e3c5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-3829418ecfecf67a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n5. 与`步骤3`一样，将框架添加到工作空间中来\n![](http://upload-images.jianshu.io/upload_images/808722-930aa09ff00d97d7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/808722-f6e24dd5ba35db97?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n6. 在目标工程中引入框架\n![](http://upload-images.jianshu.io/upload_images/808722-fc384fad36f87ba8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-57719786b7321759?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n![](http://upload-images.jianshu.io/upload_images/808722-49386ebec0e4cc4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n7. 接下来就可以在目标工程中使用引入的框架\n![](http://upload-images.jianshu.io/upload_images/808722-2c198d51d087bc6b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n*PS：如果要使用到引入框架的方法，需要将对应的类和其方法设置为`public`，具体在[Xcode 7 制作 framework](/2017/04/28/Xcode-7-制作-framework/)里有介绍。*","slug":"使用-xcworkspace-管理-iOS-工程","published":1,"updated":"2017-04-28T03:39:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21c1laf0009ca07163rpmcj","content":"<ol>\n<li><p>首先创建目标工程<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-93579b276bc93fa3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-4cd04d007ff6d5e2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\">  </p>\n</li>\n<li><p>创建工作空间<code>xcworkspace</code>文件，并将创建的<code>*.xcworkspace</code>文件放到刚创建的目标工程同级目录下<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-6d983cd8d472954d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-9cfe3f4ff8feeec6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>关闭刚刚创建的目标工程，打开<code>*.xcworkspace</code>文件，把刚刚创建的目标工程添加到工作空间中来<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-dab6c30a1c207ed0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-167e788bd16469c8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-6c6a78020755b51d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\">  </p>\n</li>\n<li><p>如果要添加一些框架，则将目标框架放到与目标工程同级目录下<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-f7ff128d3688e3c5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-3829418ecfecf67a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>与<code>步骤3</code>一样，将框架添加到工作空间中来<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-930aa09ff00d97d7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-f6e24dd5ba35db97?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>在目标工程中引入框架<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-fc384fad36f87ba8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-57719786b7321759?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-49386ebec0e4cc4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>接下来就可以在目标工程中使用引入的框架<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-2c198d51d087bc6b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><em>PS：如果要使用到引入框架的方法，需要将对应的类和其方法设置为<code>public</code>，具体在<a href=\"/2017/04/28/Xcode-7-制作-framework/\">Xcode 7 制作 framework</a>里有介绍。</em></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>首先创建目标工程<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-93579b276bc93fa3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-4cd04d007ff6d5e2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\">  </p>\n</li>\n<li><p>创建工作空间<code>xcworkspace</code>文件，并将创建的<code>*.xcworkspace</code>文件放到刚创建的目标工程同级目录下<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-6d983cd8d472954d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-9cfe3f4ff8feeec6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>关闭刚刚创建的目标工程，打开<code>*.xcworkspace</code>文件，把刚刚创建的目标工程添加到工作空间中来<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-dab6c30a1c207ed0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-167e788bd16469c8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-6c6a78020755b51d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\">  </p>\n</li>\n<li><p>如果要添加一些框架，则将目标框架放到与目标工程同级目录下<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-f7ff128d3688e3c5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-3829418ecfecf67a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>与<code>步骤3</code>一样，将框架添加到工作空间中来<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-930aa09ff00d97d7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-f6e24dd5ba35db97?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>在目标工程中引入框架<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-fc384fad36f87ba8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-57719786b7321759?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/808722-49386ebec0e4cc4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</li>\n<li><p>接下来就可以在目标工程中使用引入的框架<br><img src=\"http://upload-images.jianshu.io/upload_images/808722-2c198d51d087bc6b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><em>PS：如果要使用到引入框架的方法，需要将对应的类和其方法设置为<code>public</code>，具体在<a href=\"/2017/04/28/Xcode-7-制作-framework/\">Xcode 7 制作 framework</a>里有介绍。</em></p>\n</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj21c1l9m0000ca072j546top","category_id":"cj21c1la20002ca07hyt6breg","_id":"cj21c1lag000bca079easwz0b"},{"post_id":"cj21c1laf0009ca07163rpmcj","category_id":"cj21c1lac0007ca07u1m27yy9","_id":"cj21c1laj000fca076ecax4tx"},{"post_id":"cj21c1l9u0001ca07pi2c7wyv","category_id":"cj21c1lac0007ca07u1m27yy9","_id":"cj21c1lak000jca07c1eetsx0"},{"post_id":"cj21c1la50004ca07quf8ecfl","category_id":"cj21c1la20002ca07hyt6breg","_id":"cj21c1lak000kca07o3oss1cb"},{"post_id":"cj21c1la70005ca07b4wcg1ai","category_id":"cj21c1lac0007ca07u1m27yy9","_id":"cj21c1lal000nca07cl962cms"},{"post_id":"cj21c1lac0006ca077kodds9a","category_id":"cj21c1lac0007ca07u1m27yy9","_id":"cj21c1lam000qca07sg28bq0v"}],"PostTag":[{"post_id":"cj21c1lac0006ca077kodds9a","tag_id":"cj21c1la40003ca07mmb2fora","_id":"cj21c1lag000aca07f0eg3oqu"},{"post_id":"cj21c1l9m0000ca072j546top","tag_id":"cj21c1la40003ca07mmb2fora","_id":"cj21c1lai000eca07qlysqnb6"},{"post_id":"cj21c1l9m0000ca072j546top","tag_id":"cj21c1lad0008ca07e55m11vk","_id":"cj21c1laj000gca07wlp4covf"},{"post_id":"cj21c1l9u0001ca07pi2c7wyv","tag_id":"cj21c1la40003ca07mmb2fora","_id":"cj21c1lam000pca07fs83l50h"},{"post_id":"cj21c1l9u0001ca07pi2c7wyv","tag_id":"cj21c1laj000ica07ttam0ixt","_id":"cj21c1lam000rca072sama04n"},{"post_id":"cj21c1l9u0001ca07pi2c7wyv","tag_id":"cj21c1lal000mca070kmkkybr","_id":"cj21c1lao000tca076xm16oj3"},{"post_id":"cj21c1la50004ca07quf8ecfl","tag_id":"cj21c1la40003ca07mmb2fora","_id":"cj21c1lao000uca07rmzkpv5h"},{"post_id":"cj21c1la70005ca07b4wcg1ai","tag_id":"cj21c1la40003ca07mmb2fora","_id":"cj21c1lap000wca07e7wwbux0"},{"post_id":"cj21c1la70005ca07b4wcg1ai","tag_id":"cj21c1lao000sca07c3f2z4zj","_id":"cj21c1lap000xca07tw2qo3ui"},{"post_id":"cj21c1laf0009ca07163rpmcj","tag_id":"cj21c1la40003ca07mmb2fora","_id":"cj21c1laq000yca079sfhqtsn"},{"post_id":"cj21c1laf0009ca07163rpmcj","tag_id":"cj21c1lal000mca070kmkkybr","_id":"cj21c1laq000zca07byoymd3z"}],"Tag":[{"name":"iOS","_id":"cj21c1la40003ca07mmb2fora"},{"name":"Carthage","_id":"cj21c1lad0008ca07e55m11vk"},{"name":"Framework","_id":"cj21c1laj000ica07ttam0ixt"},{"name":"Xcode","_id":"cj21c1lal000mca070kmkkybr"},{"name":"服务端","_id":"cj21c1lao000sca07c3f2z4zj"}]}}